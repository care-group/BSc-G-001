<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="Getvalue" type="0" type_size="1" nature="4" stm_value_name="Getvalue" inner="1" tooltip="Getvalue desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Bathroom" id="1" localization="8" tooltip="" x="1173" y="729"><dialogFile>Bathroom/Bathroom.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="General" id="2" localization="8" tooltip="" x="1241" y="407"><dialogFile>General/General.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Welcome" id="3" localization="8" tooltip="" x="1247" y="304"><dialogFile>Welcome/Welcome.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Workingroom" id="4" localization="8" tooltip="" x="1240" y="513"><dialogFile>Workingroom/Workingroom.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Showwebpage" id="15" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="1374" y="1147"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        UID = self.packageUid()
        robotip = tabletService.robotIp()
        url = 'http://' + robotip + '/apps/' + UID + '/Rate.html'
        state = False
        if UID:
            if tabletService:
                    tabletService.loadUrl(url)
                    tabletService.showWebview()
                    state = True
            else:
                self.logger.warning("Couldn't find tablet service, so can't load webpage: %s" % UID)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" /><Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" /></Box><Box name="Hide Web View" id="17" localization="8" tooltip="Hides the webview (html content) on the tablet, behind a generic cover&#x0A;&#x0A;V1.0.0&#x0A;" x="1510" y="1218"><bitmap>media/images/box/internet/internet.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            tabletService.hideWebview()
        else:
            self.logger.warning("ALTabletService not found.")
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="Init &amp; Reset" id="13" localization="8" tooltip="Rests robot to standing pose, deactivates autonomous moves and basic awareness." x="156" y="124"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
            self.amoves = ALProxy("ALAutonomousMoves")
            self.motion = ALProxy("ALMotion")
            self.tablet = ALProxy("ALTabletService")
            self.dialog = ALProxy("ALDialog")
        except Exception as exc:
            self.log("Error getting required modules: %s" % str(exc))
        # Change language to English during the application
        self._changeLanguage("English")

    def onUnload(self):
        try:
            self.amoves.setBackgroundStrategy("backToNeutral")
        except Exception as exc:
            self.log("Unable to enable breathing: %s" % str(exc))
        self.postureProxy.stopMove()
        try:
            self.tablet.hideImage()
        except Exception as exc:
            self.log("Unable to hide image: %s" % str(exc))
        # Reset language on exit
        self._resetLanguage()

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during
        #the life of the application
        return "http://%s/apps/%s" %(self.tablet.robotIp(), subPath.replace(os.path.sep, "/"))

    def _preload_images(self):
        import os
        from os import listdir
        path = os.path.join(self.behaviorAbsolutePath(),"html")
        for file in listdir(path):
            result = self.tablet.preLoadImage(self._getAbsoluteUrl(file))

    def _setup_tablet(self):
        self.tablet.setBackgroundColor("#FFF1DD")
        self.tablet.showImage(self._getAbsoluteUrl("1.png"))

    def onInput_onStart(self):
        try:
            self.amoves.setBackgroundStrategy("none")
        except Exception as exc:
            self.log("Unable to disable autonomous moves: %s" % str(exc))
        self._setup_tablet()
        self._preload_images()
        self.postureProxy.setMaxTryNumber(3)
        result = self.postureProxy.goToPosture("Stand", 0.8)
        if(result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()

    def _changeLanguage(self, lang):
        self.currentLang = self.dialog.getLanguage()
        if self.currentLang != lang:
            self._setLanguage(lang)

    def _resetLanguage(self):
        if self.currentLang != self.dialog.getLanguage():
            self._setLanguage(self.currentLang)

    #def _setLanguage(self, lang):
        #try:
            #self.dialog.setLanguage(lang)
        #except Exception as exc:
            #self.log("Unable to set language: %s" % str(exc))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="4" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="Wait" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1502" y="1112"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="50" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Kitchen" id="25" localization="8" tooltip="" x="1172" y="616"><dialogFile>Kitchen/Kitchen.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="openhab" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Box name="openhab_control1" id="18" localization="8" tooltip="" x="1333" y="640"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import math
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.memory = ALProxy('ALMemory')
    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        #self.onStopped() #activate the output of the box
        self.turnitems(p)
        if p=="topcup" or p=="bottcup":
            self.getstate(p)
        else:
            pass
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box
    def turnitems(self, p):
        from openhab import openHAB
        base_url = 'http://openhabian:8080/rest'
        openhab = openHAB(base_url)
        ktchlight = openhab.get_item('Ktch_light')
        if p == "turn_on":
            ktchlight.on()
        elif p == "turn_off":
            ktchlight.off()
        else:
            pass
    def getstate(self, p):
        from openhab import openHAB
        opennum = 0
        base_url = 'http://openhabian:8080/rest'
        openhab = openHAB(base_url)
        kt_t_cup1 = openhab.get_item('Ktch_T1_Cupboard')
        kt_t_cup2 = openhab.get_item('Ktch_T2_Cupboard')
        kt_t_cup3 = openhab.get_item('Ktch_T3_Cupboard')
        kt_t_cup4 = openhab.get_item('Ktch_T4_Cupboard')
        kt_t_cup5 = openhab.get_item('Ktch_T5_Cupboard')

        statelist_t = [kt_t_cup1.state,kt_t_cup2.state,kt_t_cup3.state,kt_t_cup4.state,kt_t_cup5.state]

        if p == "topcup":
            for state in statelist_t:
                if state=="OFF":
                    opennum=opennum+1

        open = str(opennum)
        self.memory.insertData("opennumber",open)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="outputsay" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Importlib" id="40" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="265" y="23"><bitmap>media/images/box/internet/internet.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/lib" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")
        pass

    def onInput_onStart(self):
        self.folderName=self.framemanager.getBehaviorPath(self.behaviorId)+self.getParameter("File name")
        import sys
        if self.folderName not in sys.path:
            sys.path.insert(0,self.folderName)
        self.onStopped()

    def onUnload(self):
        import sys
        if self.folderName in sys.path:
            sys.path.remove(self.folderName)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Box name="library_import" id="2" localization="8" tooltip="" x="353" y="77"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import socket
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        import openhab
        import speech_recognition
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="state" id="22" localization="8" tooltip="" x="466" y="190"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    global statenum
    statenum = 1

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        global statenum
        #activate the output of the box
        self.showimage(statenum)
        self.switch(statenum)
        statenum=statenum+1

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="showimage" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Output name="switch" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" /></Box><Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="665" y="302"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(1)):
			self.output_1(p)
		elif(p == self.typeConversion(2)):
			self.output_2(p)
		elif(p == self.typeConversion(3)):
			self.output_3(p)
		elif(p == self.typeConversion(4)):
			self.output_4(p)
		elif(p == self.typeConversion(5)):
			self.output_5(p)
		elif(p == self.typeConversion(6)):
			self.output_6(p)
		elif(p == self.typeConversion(7)):
			self.output_7(p)
		elif(p == self.typeConversion(8)):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="1" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /></Box><Box name="Show Image" id="5" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="789" y="169"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAppName(self):
        import os
        if self.frameManager:
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                self.logger.error("appsFolderFragment is not in behaviorPath")
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self._getAppName(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self, c):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        counter = c
        if tabletService:
            try:
                url = str(counter)+".png"
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Bedroom" id="9" localization="8" tooltip="" x="1176" y="852"><dialogFile>Bedroom/Bedroom.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="openhab" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Box name="openhab_control2" id="10" localization="8" tooltip="" x="1317" y="855"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import requests
import math
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        #self.onStopped() #activate the output of the box
        self.control_item(p)
        self.onStopped()
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box
    def control_item(self, p):
        blind_url_b =  'http://openhabian:8080/rest/items/Bedroom_blind'
        bed_light = 'http://192.168.1.220:8080/rest/items/BdRm_light'
        if p =="blind":
            data = '100'
            requests.post(blind_url_b,data=data)
        elif p == "lightb":
            data = '1'
            requests.post(bed_light,data=data)
        elif p == "lightd":
            data = '4'
            requests.post(bed_light,data=data)
        else:
            pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="livngroom" id="11" localization="8" tooltip="" x="1170" y="1093"><dialogFile>livingroom/livingroom.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="openhab" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Output name="showwebpage" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Output name="dance" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" /></Box><Box name="openhab_control3" id="19" localization="8" tooltip="" x="1368" y="1043"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import requests
import math
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)


    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        self.onStopped() #activate the output of the box
        pass
    def onInput_onStart(self, p):
        #self.onStopped() #activate the output of the box
        if p == "turnon":
            self.turnonitems()
        elif p == "turndown":
            self.turndownitems()
        else:
            pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped

    def turnonitems(self):
        from openhab import openHAB
        base_url = 'http://openhabian:8080/rest'
        openhab = openHAB(base_url)
        blind_url_r =  'http://openhabian:8080/rest/items/LivingRoomLivingRoomBlindsRight'
        blind_url_l = 'http://openhabian:8080/rest/items/LivingRoomLivingRoomBlindsLeft'
        ktchstrip1 = openhab.get_item('Hue_Ktch_WkT_Lstp_tgl_1')
        ktchstrip2 = openhab.get_item('Hue_Ktch_WkT_Lstp_tgl_2')
        ktchlight = openhab.get_item('Ktch_light')
        data = '100'
        ktchlight.on()
        ktchstrip1.on()
        ktchstrip2.on()
        requests.post(blind_url_r,data=data)
        requests.post(blind_url_l,data=data)

    def turndownitems(self):
        from openhab import openHAB
        base_url = 'http://openhabian:8080/rest'
        openhab = openHAB(base_url)
        blind_url_r =  'http://openhabian:8080/rest/items/LivingRoomLivingRoomBlindsRight'
        blind_url_l = 'http://openhabian:8080/rest/items/LivingRoomLivingRoomBlindsLeft'
        ktchstrip1 = openhab.get_item('Hue_Ktch_WkT_Lstp_tgl_1')
        ktchstrip2 = openhab.get_item('Hue_Ktch_WkT_Lstp_tgl_2')
        ktchlight = openhab.get_item('Ktch_light')
        data = '0'
        ktchlight.off()
        ktchstrip1.off()
        ktchstrip2.off()
        requests.post(blind_url_r,data=data)
        requests.post(blind_url_l,data=data)
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Internet Check" id="34" localization="8" tooltip="Enter description here" x="1177" y="973"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="Internet Connection_onStop" type="1" type_size="1" nature="3" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" /><Input name="Internet Connection_onStop_2" type="1" type_size="1" nature="3" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="3" /><Input name="Internet Connection_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="4" /><Output name="InternetConnection_connected" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="5" /><Output name="NoInternet_onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Internet Connection" id="8" localization="8" tooltip="This box detects when the robot is connected or disconnected to the Internet." x="272" y="180"><bitmap>media/images/box/internet/internet.png</bitmap><script language="4"><content><![CDATA[import socket
import time
import urllib2

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False
        self.bConnected = None

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        previousTimeout = socket.getdefaulttimeout()
        while( not self.bMustStop ):
            nTimeout = self.getParameter("Time to refresh (s)")
            tempReqs = self.getParameter("URLs").split(';')
            reqs = []
            for tempReq in tempReqs:
                reqs.append(tempReq.strip(" \n"))
            socket.setdefaulttimeout(nTimeout * 1. / len(reqs))
            bOk = False
            for req in reqs:
                try:
                    urllib2.urlopen(req)
                    bOk = True
                    break
                except:
                    pass
            if( self.bConnected == None ):
                self.bConnected = not bOk
            if( bOk and not self.bConnected ):
                self.bConnected = True
                self.connected()
                time.sleep(nTimeout)
            if( not bOk and self.bConnected ):
                self.bConnected = False
                self.notconnected()
        socket.setdefaulttimeout(previousTimeout)
        self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" /><Output name="connected" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the robot just connected to the Internet." id="5" /><Output name="notconnected" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the robot has just been disconnected from the Internet." id="6" /><Parameter name="Time to refresh (s)" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="2" max="60" tooltip="Time ellapsed before checking the connection again." id="7" /><Parameter name="URLs" inherits_from_parent="0" content_type="3" value="http://aldebaran.com/;http://www.google.com" default_value="http://aldebaran.com/;http://www.google.com" custom_choice="0" tooltip="List of URLs used to check the connection separated by &apos;;&apos;." id="8" /></Box><Box name="No Internet!" id="3" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="718" y="229"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " I can\'t connect to the internet! Can\'t talk! ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Hallo]]></german><greek><![CDATA[]]></greek><english><![CDATA[I can't connect to the internet! Can't talk!]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>20</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="6" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="8" indexofoutput="5" /><Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Dance Timeline" id="8" localization="0" tooltip="This box contains the dance animation timeline." x="1389" y="1278"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="1300" size="1300"><BehaviorLayer name="music"><BehaviorKeyframe name="Music" index="1"><Diagram scale="100"><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="231" y="86"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sound/Shape_of_You.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="tablet"><BehaviorKeyframe name="Tablet Images" index="29"><Diagram><Box name="Show Image" id="13" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="214" y="94"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.onInput_onHideImage()

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAppName(self):
        import os
        if self.frameManager:
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                self.logger.error("appsFolderFragment is not in behaviorPath")
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self._getAppName(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" /><Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="Pepper.jpg" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" /></Box><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="12" value="-34" /><Key frame="19" value="-29.7949" /><Key frame="25" value="-45" /><Key frame="39" value="-15.4495" /><Key frame="51" value="-56.7999" /><Key frame="62" value="-71.9824" /><Key frame="71" value="-71.1415" /><Key frame="76" value="-57.2" /><Key frame="85" value="-20.3906" /><Key frame="94" value="-22.7451" /><Key frame="95" value="-20.2" /><Key frame="106" value="-71.9824" /><Key frame="112" value="-49.3" /><Key frame="117" value="-20.3906" /><Key frame="128" value="-22.2406" /><Key frame="133" value="-41.5" /><Key frame="139" value="-71.9824" /><Key frame="145" value="-50.9" /><Key frame="151" value="-20.3906" /><Key frame="157" value="-46.2" /><Key frame="162" value="-71.9824" /><Key frame="167" value="-54.1" /><Key frame="173" value="-20.3906" /><Key frame="178" value="-35.2" /><Key frame="183" value="-71.9824" /><Key frame="189" value="-50.1" /><Key frame="194" value="-20.3906" /><Key frame="200" value="-42.2" /><Key frame="205" value="-71.9824" /><Key frame="211" value="-47" /><Key frame="216" value="-20.3906" /><Key frame="222" value="-39.9" /><Key frame="227" value="-68.9552" /><Key frame="233" value="-50.9" /><Key frame="238" value="-23.0815" /><Key frame="254" value="-76.5668" /><Key frame="261" value="-74.9707" /><Key frame="270" value="-22.3" /><Key frame="275" value="-35.7307" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.917965" ordinateParam="4.25131" /><Tangent side="right" interpType="bezier" abscissaParam="3.12108" ordinateParam="-14.4545" /></Key><Key frame="292" value="-74.574" /><Key frame="300" value="-72.9" /><Key frame="317" value="-50.8887" /><Key frame="332" value="-53.2617" /><Key frame="342" value="-53" /><Key frame="349" value="-0.385924" /><Key frame="360" value="-2.2244" /><Key frame="369" value="-58.8" /><Key frame="377" value="-78.6277" /><Key frame="402" value="-77.5195" /><Key frame="406" value="-75.8496" /><Key frame="424" value="-74.9707" /><Key frame="434" value="-83.3203" /><Key frame="444" value="-59.1504" /><Key frame="454" value="-83.3203" /><Key frame="464" value="-59.1504" /><Key frame="473" value="-83.3203" /><Key frame="486" value="-78.3426" /><Key frame="492" value="-0.703127" /><Key frame="501" value="-2.90039" /><Key frame="508" value="-53.5513" /><Key frame="517" value="-78.9258" /><Key frame="531" value="-77.7832" /><Key frame="544" value="-77.6463" /><Key frame="555" value="-78.9258" /><Key frame="569" value="-41.7956" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.96961" ordinateParam="-15.2495" /><Tangent side="right" interpType="bezier" abscissaParam="2.12115" ordinateParam="10.8925" /></Key><Key frame="579" value="-3.89411" /><Key frame="608" value="-53.2617" /><Key frame="623" value="-53" /><Key frame="636" value="-24.8466" /><Key frame="664" value="-23.291" /><Key frame="697" value="-73.193" /><Key frame="715" value="-84.5812" /><Key frame="760" value="-27.5489" /><Key frame="765" value="-26.2223" /><Key frame="776" value="-26.2223" /><Key frame="787" value="-26.2223" /><Key frame="886" value="-26.2223" /><Key frame="901" value="-27.5489" /><Key frame="906" value="-26.2223" /><Key frame="969" value="-83.0566" /><Key frame="975" value="-77.2559" /><Key frame="980" value="-77.4316" /><Key frame="982" value="-78.8379" /><Key frame="988" value="-77.2559" /><Key frame="993" value="-78.8379" /><Key frame="998" value="-77.2559" /><Key frame="1018" value="-80.2441" /><Key frame="1027" value="-79.8324" /><Key frame="1031" value="-84.5812" /><Key frame="1041" value="-76.3025" /><Key frame="1046" value="-77.9996" /><Key frame="1057" value="-65.1" /><Key frame="1068" value="-77.9996" /><Key frame="1079" value="-65.4536" /><Key frame="1090" value="-77.9996" /><Key frame="1101" value="-65.1" /><Key frame="1112" value="-77.9996" /><Key frame="1123" value="-67.1506" /><Key frame="1134" value="-77.9996" /><Key frame="1145" value="-65.1" /><Key frame="1156" value="-77.9996" /><Key frame="1167" value="-65.1" /><Key frame="1178" value="-77.9996" /><Key frame="1189" value="-65.1" /><Key frame="1200" value="-77.9996" /><Key frame="1211" value="-65.1" /><Key frame="1222" value="-65.1" /><Key frame="1233" value="-77.9996" /><Key frame="1258" value="-59.7" /><Key frame="1273" value="-82.8808" /><Key frame="1285" value="-80.7923" /><Key frame="1293" value="-80.0093" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="11" value="-61.4" /><Key frame="19" value="-70.0488" /><Key frame="32" value="-84.375" /><Key frame="39" value="-89.9585" /><Key frame="62" value="-45.8789" /><Key frame="72" value="-48.4016" /><Key frame="84" value="-58.0264" /><Key frame="93" value="-60.3809" /><Key frame="106" value="-45.8789" /><Key frame="117" value="-60.3809" /><Key frame="126" value="-57.5219" /><Key frame="139" value="-45.8789" /><Key frame="150" value="-60.3809" /><Key frame="161" value="-45.8789" /><Key frame="172" value="-60.3809" /><Key frame="183" value="-45.8789" /><Key frame="194" value="-60.3809" /><Key frame="205" value="-45.8789" /><Key frame="216" value="-60.3809" /><Key frame="227" value="-45.8789" /><Key frame="257" value="-94.8724" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.807973" ordinateParam="2.19482" /><Tangent side="right" interpType="bezier" abscissaParam="1.28" ordinateParam="-3.47707" /></Key><Key frame="264" value="-119.5" /><Key frame="281" value="-21.5332" /><Key frame="292" value="-38.1" /><Key frame="302" value="-45.8" /><Key frame="321" value="-111.197" /><Key frame="332" value="-104.326" /><Key frame="342" value="-45.8" /><Key frame="347" value="-71.0156" /><Key frame="358" value="-70.0642" /><Key frame="376" value="3.44316" /><Key frame="381" value="4.39453" /><Key frame="396" value="-7.29493" /><Key frame="409" value="-56.4721" /><Key frame="424" value="-59.2383" /><Key frame="434" value="-43.5059" /><Key frame="444" value="-63.7207" /><Key frame="454" value="-43.5059" /><Key frame="464" value="-63.7207" /><Key frame="473" value="-43.5059" /><Key frame="486" value="-88.2" /><Key frame="494" value="-84.2552" /><Key frame="500" value="-76.3498" /><Key frame="517" value="3.95508" /><Key frame="544" value="3.35012" /><Key frame="552" value="3.95508" /><Key frame="562" value="-26.1" /><Key frame="569" value="-18.9008" /><Key frame="597" value="-111.197" /><Key frame="608" value="-104.326" /><Key frame="623" value="-45.8" /><Key frame="636" value="-37.0019" /><Key frame="664" value="-37.0019" /><Key frame="696" value="1.58204" /><Key frame="717" value="8.08593" /><Key frame="754" value="-90.7105" /><Key frame="758" value="-97.6983" /><Key frame="765" value="-96.5793" /><Key frame="776" value="-96.5793" /><Key frame="787" value="-96.5793" /><Key frame="886" value="-96.5793" /><Key frame="901" value="-99.0437" /><Key frame="974" value="-38.0566" /><Key frame="975" value="-38.0566" /><Key frame="982" value="-52.2949" /><Key frame="987" value="-38.0566" /><Key frame="988" value="-38.0566" /><Key frame="993" value="-52.2949" /><Key frame="994" value="-52.2949" /><Key frame="998" value="-38.0566" /><Key frame="1018" value="-66.6211" /><Key frame="1040" value="-77.1" /><Key frame="1258" value="-52.5" /><Key frame="1273" value="-20.3028" /><Key frame="1293" value="-21.549" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" alwaysVisible="1" unit="1"><Key frame="13" value="0.68" /><Key frame="19" value="0.593146" /><Key frame="32" value="0.593146" /><Key frame="39" value="0.754394" /><Key frame="51" value="0" /><Key frame="64" value="0.792619" /><Key frame="73" value="0.9" /><Key frame="79" value="0.51" /><Key frame="86" value="0.7" /><Key frame="95" value="0.76" /><Key frame="101" value="0.41" /><Key frame="107" value="0.92" /><Key frame="112" value="0.23" /><Key frame="119" value="0.92" /><Key frame="128" value="0.84" /><Key frame="133" value="0.63" /><Key frame="141" value="0.91" /><Key frame="145" value="0.43" /><Key frame="153" value="0.91" /><Key frame="157" value="0.5" /><Key frame="164" value="1" /><Key frame="168" value="0.47" /><Key frame="175" value="1" /><Key frame="178" value="0.35" /><Key frame="185" value="1" /><Key frame="189" value="0.53" /><Key frame="196" value="1" /><Key frame="200" value="0.45" /><Key frame="207" value="1" /><Key frame="211" value="0.48" /><Key frame="218" value="1" /><Key frame="222" value="0.5" /><Key frame="229" value="1" /><Key frame="233" value="0.58" /><Key frame="240" value="0.779438" /><Key frame="252" value="0.459348" /><Key frame="261" value="0.336555" /><Key frame="270" value="1" /><Key frame="274" value="0.946397" /><Key frame="283" value="0.97" /><Key frame="292" value="0.58" /><Key frame="303" value="0.17" /><Key frame="317" value="0.814587" /><Key frame="332" value="0.77" /><Key frame="342" value="0.45" /><Key frame="347" value="0.914763" /><Key frame="360" value="0.896309" /><Key frame="365" value="0.66" /><Key frame="371" value="0.0764499" /><Key frame="375" value="0.905975" /><Key frame="381" value="0.905975" /><Key frame="396" value="0.783831" /><Key frame="402" value="0.459578" /><Key frame="406" value="0.0325131" /><Key frame="424" value="0.0483304" /><Key frame="434" value="0.0316344" /><Key frame="444" value="0.278559" /><Key frame="454" value="0.0316344" /><Key frame="464" value="0.278559" /><Key frame="473" value="0.0316344" /><Key frame="486" value="0" /><Key frame="501" value="0.510545" /><Key frame="508" value="0.299698" /><Key frame="517" value="0.0351493" /><Key frame="569" value="0.00234199" /><Key frame="579" value="1" /><Key frame="589" value="1" /><Key frame="608" value="0.77" /><Key frame="623" value="0.45" /><Key frame="636" value="0.866432" /><Key frame="643" value="0.96" /><Key frame="651" value="0.75" /><Key frame="664" value="0.866432" /><Key frame="674" value="0.45" /><Key frame="696" value="0.556239" /><Key frame="717" value="0.508787" /><Key frame="753" value="0.590936" /><Key frame="760" value="0.582789" /><Key frame="765" value="0.590093" /><Key frame="776" value="0.590093" /><Key frame="787" value="0.590093" /><Key frame="886" value="0.590093" /><Key frame="901" value="0.582789" /><Key frame="906" value="0.590093" /><Key frame="970" value="0.304921" /><Key frame="974" value="0.214411" /><Key frame="975" value="0.214411" /><Key frame="980" value="0.100176" /><Key frame="982" value="0.134446" /><Key frame="987" value="0.214411" /><Key frame="988" value="0.214411" /><Key frame="993" value="0.134446" /><Key frame="994" value="0.134446" /><Key frame="998" value="0.214411" /><Key frame="1007" value="0.134446" /><Key frame="1018" value="1" /><Key frame="1027" value="0.781294" /><Key frame="1040" value="0" /><Key frame="1046" value="0" /><Key frame="1057" value="0.73" /><Key frame="1068" value="0" /><Key frame="1079" value="0.73" /><Key frame="1090" value="0" /><Key frame="1101" value="0.73" /><Key frame="1112" value="0" /><Key frame="1123" value="0.73" /><Key frame="1134" value="0" /><Key frame="1145" value="0.73" /><Key frame="1156" value="0" /><Key frame="1167" value="0.73" /><Key frame="1178" value="0" /><Key frame="1189" value="0.73" /><Key frame="1200" value="0" /><Key frame="1211" value="0.73" /><Key frame="1222" value="0.73" /><Key frame="1233" value="0" /><Key frame="1258" value="0.22" /><Key frame="1273" value="0.543058" /><Key frame="1293" value="0.76903" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="19" value="89.0332" /><Key frame="39" value="-44.8712" /><Key frame="51" value="-59.1672" /><Key frame="73" value="-60.9082" /><Key frame="84" value="-57.4805" /><Key frame="95" value="-57.7859" /><Key frame="106" value="-60.9082" /><Key frame="117" value="-57.4805" /><Key frame="128" value="-58.2441" /><Key frame="139" value="-60.9082" /><Key frame="150" value="-57.4805" /><Key frame="161" value="-60.9082" /><Key frame="172" value="-57.4805" /><Key frame="183" value="-60.9082" /><Key frame="194" value="-57.4805" /><Key frame="205" value="-60.9082" /><Key frame="216" value="-57.4805" /><Key frame="227" value="-60.9082" /><Key frame="238" value="-57.4805" /><Key frame="252" value="38.9421" /><Key frame="261" value="60.5566" /><Key frame="270" value="18.7" /><Key frame="281" value="17.8418" /><Key frame="292" value="43.1" /><Key frame="317" value="41.2207" /><Key frame="332" value="23.7613" /><Key frame="347" value="-77.3438" /><Key frame="358" value="-77.2559" /><Key frame="365" value="-52.7784" /><Key frame="375" value="-48.5156" /><Key frame="381" value="-48.5156" /><Key frame="396" value="-52.7344" /><Key frame="401" value="-52.2277" /><Key frame="406" value="-42.1875" /><Key frame="424" value="-39.9902" /><Key frame="434" value="-47.2852" /><Key frame="444" value="-29.8828" /><Key frame="454" value="-47.2852" /><Key frame="464" value="-29.8828" /><Key frame="473" value="-47.2852" /><Key frame="496" value="55.7327" /><Key frame="502" value="50.1605" /><Key frame="508" value="24.2351" /><Key frame="517" value="3.77929" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.52632" ordinateParam="0.757895" /><Tangent side="right" interpType="bezier" abscissaParam="10.6667" ordinateParam="-3.2" /></Key><Key frame="555" value="3.77929" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-8.86667" ordinateParam="-3" /><Tangent side="right" interpType="bezier" abscissaParam="3.26667" ordinateParam="1.10526" /></Key><Key frame="569" value="60.7131" /><Key frame="582" value="25.7514" /><Key frame="587" value="11.819" /><Key frame="608" value="23.7613" /><Key frame="638" value="-52.9406" /><Key frame="664" value="-54.1406" /><Key frame="696" value="-24.6094" /><Key frame="717" value="-20.0391" /><Key frame="750" value="57.3976" /><Key frame="760" value="18.6231" /><Key frame="765" value="19.4867" /><Key frame="776" value="19.4867" /><Key frame="787" value="19.4867" /><Key frame="886" value="19.4867" /><Key frame="901" value="18.6231" /><Key frame="970" value="29.0918" /><Key frame="974" value="30.4102" /><Key frame="980" value="22.5" /><Key frame="982" value="22.3242" /><Key frame="987" value="30.4102" /><Key frame="993" value="22.3242" /><Key frame="998" value="30.4102" /><Key frame="1007" value="22.3242" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.04403" ordinateParam="5.46797" /><Tangent side="right" interpType="bezier" abscissaParam="7.49478" ordinateParam="-20.0492" /></Key><Key frame="1040" value="-0.9" /><Key frame="1046" value="-0.900039" /><Key frame="1057" value="24.9385" /><Key frame="1068" value="-0.900039" /><Key frame="1079" value="24.9385" /><Key frame="1090" value="-0.900039" /><Key frame="1101" value="24.9385" /><Key frame="1112" value="-0.900039" /><Key frame="1123" value="24.9385" /><Key frame="1134" value="-0.900039" /><Key frame="1145" value="24.9385" /><Key frame="1156" value="-0.900039" /><Key frame="1167" value="24.9385" /><Key frame="1178" value="-0.900039" /><Key frame="1189" value="24.9385" /><Key frame="1200" value="-0.900039" /><Key frame="1211" value="23.9306" /><Key frame="1222" value="24.9385" /><Key frame="1234" value="1.54764" /><Key frame="1244" value="-0.900039" /><Key frame="1253" value="45.6241" /><Key frame="1273" value="12.129" /><Key frame="1293" value="14.9321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="10" value="17.8" /><Key frame="19" value="8.96484" /><Key frame="32" value="40.6858" /><Key frame="39" value="40.4687" /><Key frame="51" value="37.2" /><Key frame="62" value="38.1521" /><Key frame="73" value="38.3203" /><Key frame="84" value="47.4838" /><Key frame="95" value="47.9883" /><Key frame="106" value="38.3203" /><Key frame="117" value="47.5679" /><Key frame="128" value="47.9883" /><Key frame="139" value="38.3203" /><Key frame="150" value="47.9883" /><Key frame="161" value="38.3203" /><Key frame="172" value="47.9883" /><Key frame="183" value="38.3203" /><Key frame="194" value="47.9883" /><Key frame="205" value="38.3203" /><Key frame="216" value="47.9883" /><Key frame="227" value="38.3203" /><Key frame="238" value="47.9883" /><Key frame="252" value="35.1503" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.400871" ordinateParam="0.779283" /><Tangent side="right" interpType="bezier" abscissaParam="6.4354" ordinateParam="-12.5103" /></Key><Key frame="281" value="4.39453" /><Key frame="317" value="49.7461" /><Key frame="332" value="48.5156" /><Key frame="347" value="4.57031" /><Key frame="360" value="4.48242" /><Key frame="371" value="0.9668" /><Key frame="381" value="1.23047" /><Key frame="402" value="59.4021" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-5.0201" ordinateParam="-17.2407" /><Tangent side="right" interpType="bezier" abscissaParam="1.43431" ordinateParam="4.92591" /></Key><Key frame="408" value="66.0938" /><Key frame="424" value="66.4453" /><Key frame="434" value="58.2715" /><Key frame="444" value="71.3672" /><Key frame="454" value="58.2715" /><Key frame="464" value="71.3672" /><Key frame="473" value="58.2715" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.21674" ordinateParam="8.35953" /><Tangent side="right" interpType="bezier" abscissaParam="3.20196" ordinateParam="-12.0749" /></Key><Key frame="486" value="11.4999" /><Key frame="492" value="1.66993" /><Key frame="501" value="1.31836" /><Key frame="508" value="8.50416" /><Key frame="544" value="9.69792" /><Key frame="555" value="8.78906" /><Key frame="564" value="20.575" /><Key frame="569" value="19.9118" /><Key frame="585" value="36.3" /><Key frame="608" value="48.5156" /><Key frame="636" value="43.8574" /><Key frame="664" value="43.8574" /><Key frame="696" value="24.6134" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-10.6667" ordinateParam="3.17227" /><Tangent side="right" interpType="bezier" abscissaParam="7" ordinateParam="-2.0818" /></Key><Key frame="717" value="21.6706" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-7.98995" ordinateParam="1.52858" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key><Key frame="753" value="8.19951" /><Key frame="760" value="8.95698" /><Key frame="765" value="8.31189" /><Key frame="776" value="8.31189" /><Key frame="787" value="8.31189" /><Key frame="886" value="8.31193" /><Key frame="901" value="8.95698" /><Key frame="906" value="8.31189" /><Key frame="970" value="19.4238" /><Key frame="974" value="19.0723" /><Key frame="980" value="16.7871" /><Key frame="982" value="16.875" /><Key frame="987" value="19.0723" /><Key frame="988" value="19.0223" /><Key frame="993" value="16.875" /><Key frame="994" value="16.875" /><Key frame="998" value="19.0723" /><Key frame="1007" value="16.875" /><Key frame="1027" value="16.8907" /><Key frame="1040" value="11.4568" /><Key frame="1046" value="10.7" /><Key frame="1258" value="23.4" /><Key frame="1273" value="11.4259" /><Key frame="1293" value="9.63863" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="19" value="-2.02391" /><Key frame="32" value="3.24959" /><Key frame="39" value="-1.98623" /><Key frame="63" value="29.9735" /><Key frame="73" value="28.5735" /><Key frame="76" value="36.1" /><Key frame="86" value="14.8513" /><Key frame="95" value="15.6513" /><Key frame="101" value="42" /><Key frame="107" value="29.9735" /><Key frame="112" value="6.8" /><Key frame="118" value="16.2513" /><Key frame="128" value="14.8513" /><Key frame="133" value="10.7" /><Key frame="140" value="34.2" /><Key frame="145" value="2.9" /><Key frame="152" value="14.8513" /><Key frame="157" value="2.9" /><Key frame="163" value="40" /><Key frame="167" value="36.1" /><Key frame="174" value="14.8513" /><Key frame="178" value="8.8" /><Key frame="184" value="29.9735" /><Key frame="189" value="36.1" /><Key frame="195" value="14.8513" /><Key frame="200" value="14.6" /><Key frame="206" value="29.9735" /><Key frame="211" value="28.3" /><Key frame="217" value="14.8513" /><Key frame="222" value="10.7" /><Key frame="228" value="29.9735" /><Key frame="233" value="32.2" /><Key frame="239" value="4.9" /><Key frame="264" value="97.7728" /><Key frame="280" value="30.318" /><Key frame="293" value="74.6864" /><Key frame="302" value="51.8" /><Key frame="317" value="-76.4682" /><Key frame="332" value="-67.5033" /><Key frame="342" value="-59.6" /><Key frame="349" value="-20.9002" /><Key frame="360" value="-18.2839" /><Key frame="370" value="-65.4" /><Key frame="376" value="-29.9" /><Key frame="381" value="-28.3" /><Key frame="393" value="-50.6511" /><Key frame="406" value="-89.2077" /><Key frame="424" value="-88.6852" /><Key frame="434" value="-73.9193" /><Key frame="444" value="-89.2956" /><Key frame="454" value="-73.9193" /><Key frame="464" value="-89.2956" /><Key frame="473" value="-73.9193" /><Key frame="486" value="2" /><Key frame="492" value="-5.27591" /><Key frame="508" value="-8.32652" /><Key frame="517" value="-3.43018" /><Key frame="531" value="-3.78175" /><Key frame="551" value="-3.43018" /><Key frame="563" value="-30.1622" /><Key frame="569" value="-29.5771" /><Key frame="585" value="-104.5" /><Key frame="608" value="-67.5033" /><Key frame="623" value="-59.6" /><Key frame="636" value="-103.451" /><Key frame="664" value="-98.6942" /><Key frame="696" value="14.6755" /><Key frame="713" value="34.3633" /><Key frame="752" value="-55.2481" /><Key frame="760" value="-49.4" /><Key frame="765" value="-51.0377" /><Key frame="776" value="-51.0377" /><Key frame="787" value="-51.0377" /><Key frame="886" value="-51.0377" /><Key frame="901" value="-49.4" /><Key frame="970" value="-63.636" /><Key frame="974" value="-49.3976" /><Key frame="975" value="-49.3976" /><Key frame="982" value="-61.0872" /><Key frame="987" value="-49.3976" /><Key frame="988" value="-49.3976" /><Key frame="993" value="-61.0872" /><Key frame="994" value="-61.0872" /><Key frame="998" value="-49.3976" /><Key frame="1009" value="-65.4279" /><Key frame="1029" value="34.3633" /><Key frame="1030" value="-42.4139" /><Key frame="1040" value="-18.6" /><Key frame="1045" value="-16.2" /><Key frame="1057" value="29.6" /><Key frame="1068" value="-18.6" /><Key frame="1079" value="32.2" /><Key frame="1090" value="-18.6" /><Key frame="1101" value="32.2" /><Key frame="1112" value="-18.6" /><Key frame="1123" value="32.2" /><Key frame="1134" value="-18.6" /><Key frame="1145" value="32.2" /><Key frame="1156" value="-18.6" /><Key frame="1167" value="32.2" /><Key frame="1178" value="-18.6" /><Key frame="1189" value="32.2" /><Key frame="1200" value="-18.6" /><Key frame="1211" value="32.2" /><Key frame="1222" value="30.2" /><Key frame="1235" value="-16.4" /><Key frame="1244" value="-18.6" /><Key frame="1247" value="-6.79996" /><Key frame="1256" value="-9.4" /><Key frame="1273" value="-62.8449" /><Key frame="1293" value="-61.204" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="14" value="34" /><Key frame="21" value="29.8828" /><Key frame="28" value="45.1" /><Key frame="38" value="21.5765" /><Key frame="51" value="56.7999" /><Key frame="62" value="20.3906" /><Key frame="73" value="21.8906" /><Key frame="85" value="69.9824" /><Key frame="95" value="71.9824" /><Key frame="101" value="46.9" /><Key frame="106" value="22.1906" /><Key frame="112" value="43.1" /><Key frame="117" value="70.5824" /><Key frame="129" value="71.9824" /><Key frame="134" value="53" /><Key frame="139" value="22.1906" /><Key frame="145" value="41.6" /><Key frame="151" value="71.9824" /><Key frame="157" value="49.9" /><Key frame="163" value="20.3906" /><Key frame="167" value="37" /><Key frame="173" value="71.9824" /><Key frame="178" value="53" /><Key frame="183" value="20.3906" /><Key frame="189" value="41.6" /><Key frame="194" value="71.9824" /><Key frame="200" value="49.2" /><Key frame="205" value="23.1906" /><Key frame="211" value="42.3" /><Key frame="216" value="71.9824" /><Key frame="222" value="45.4" /><Key frame="227" value="23.7906" /><Key frame="233" value="40.1" /><Key frame="240" value="71.7824" /><Key frame="252" value="81.6933" /><Key frame="261" value="77.168" /><Key frame="292" value="76.1369" /><Key frame="300" value="80.6" /><Key frame="302" value="81.1" /><Key frame="310" value="64.4" /><Key frame="321" value="50.5371" /><Key frame="334" value="50.9766" /><Key frame="342" value="53" /><Key frame="349" value="4.6582" /><Key frame="356" value="5.13388" /><Key frame="371" value="73.125" /><Key frame="375" value="78.75" /><Key frame="381" value="78.75" /><Key frame="396" value="65.127" /><Key frame="402" value="77.5195" /><Key frame="406" value="75.8496" /><Key frame="424" value="74.0039" /><Key frame="434" value="59.1504" /><Key frame="444" value="83.3203" /><Key frame="454" value="59.1504" /><Key frame="464" value="83.3203" /><Key frame="475" value="59.8639" /><Key frame="486" value="78.0598" /><Key frame="494" value="78.3674" /><Key frame="501" value="78.3984" /><Key frame="508" value="76.4829" /><Key frame="517" value="86.0449" /><Key frame="555" value="86.0449" /><Key frame="571" value="72.803" /><Key frame="597" value="50.5371" /><Key frame="610" value="50.9766" /><Key frame="623" value="53" /><Key frame="636" value="23.3789" /><Key frame="664" value="23.3789" /><Key frame="696" value="51.2402" /><Key frame="717" value="55.7227" /><Key frame="756" value="66.6408" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.0086179" ordinateParam="0.00673019" /><Tangent side="right" interpType="bezier" abscissaParam="4.10658" ordinateParam="-3.20704" /></Key><Key frame="764" value="19.2635" /><Key frame="765" value="20.0071" /><Key frame="771" value="59.0673" /><Key frame="775" value="19.2635" /><Key frame="776" value="20.0071" /><Key frame="782" value="59.0673" /><Key frame="786" value="19.2635" /><Key frame="787" value="20.0071" /><Key frame="793" value="59.0673" /><Key frame="797" value="19.2635" /><Key frame="798" value="20.0071" /><Key frame="804" value="59.0673" /><Key frame="808" value="19.2635" /><Key frame="809" value="20.0071" /><Key frame="815" value="59.0673" /><Key frame="819" value="19.2635" /><Key frame="820" value="20.0071" /><Key frame="826" value="59.0673" /><Key frame="830" value="19.2635" /><Key frame="831" value="20.0071" /><Key frame="837" value="59.0673" /><Key frame="841" value="19.2635" /><Key frame="842" value="20.0071" /><Key frame="848" value="59.0673" /><Key frame="852" value="19.2635" /><Key frame="853" value="20.0071" /><Key frame="859" value="59.0673" /><Key frame="863" value="19.2635" /><Key frame="864" value="20.0071" /><Key frame="870" value="59.0673" /><Key frame="874" value="19.2635" /><Key frame="875" value="20.0071" /><Key frame="880" value="59.0673" /><Key frame="885" value="19.2635" /><Key frame="886" value="20.0071" /><Key frame="891" value="59.0673" /><Key frame="896" value="19.2635" /><Key frame="897" value="20.0071" /><Key frame="903" value="59.0673" /><Key frame="907" value="19.2635" /><Key frame="908" value="20.0071" /><Key frame="914" value="59.0673" /><Key frame="918" value="19.2635" /><Key frame="919" value="20.0071" /><Key frame="925" value="59.0673" /><Key frame="929" value="19.2635" /><Key frame="930" value="20.0071" /><Key frame="936" value="59.0673" /><Key frame="940" value="19.2635" /><Key frame="941" value="20.0071" /><Key frame="947" value="59.0673" /><Key frame="951" value="19.2635" /><Key frame="952" value="20.0071" /><Key frame="958" value="59.0673" /><Key frame="962" value="19.2635" /><Key frame="963" value="20.0071" /><Key frame="971" value="83.7942" /><Key frame="974" value="82.9688" /><Key frame="980" value="73.125" /><Key frame="982" value="73.916" /><Key frame="987" value="82.9688" /><Key frame="988" value="82.9688" /><Key frame="993" value="73.916" /><Key frame="994" value="73.916" /><Key frame="998" value="82.9688" /><Key frame="1008" value="73.916" /><Key frame="1027" value="71.4627" /><Key frame="1038" value="77.8001" /><Key frame="1046" value="65.1" /><Key frame="1057" value="77.9996" /><Key frame="1068" value="65.1" /><Key frame="1079" value="77.9996" /><Key frame="1090" value="65.1" /><Key frame="1101" value="77.9996" /><Key frame="1112" value="65.1" /><Key frame="1123" value="77.9996" /><Key frame="1134" value="65.1" /><Key frame="1145" value="77.9996" /><Key frame="1156" value="65.1" /><Key frame="1167" value="77.9996" /><Key frame="1178" value="65.1" /><Key frame="1189" value="77.9996" /><Key frame="1200" value="65.1" /><Key frame="1211" value="77.2996" /><Key frame="1222" value="77.9996" /><Key frame="1233" value="65.1" /><Key frame="1247" value="59.7" /><Key frame="1258" value="59" /><Key frame="1268" value="25.9" /><Key frame="1274" value="34.7935" /><Key frame="1285" value="35.4921" /><Key frame="1293" value="18.8" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="13" value="61.4" /><Key frame="21" value="70.2246" /><Key frame="34" value="90.2751" /><Key frame="39" value="93.2462" /><Key frame="52" value="62.8998" /><Key frame="73" value="59.2809" /><Key frame="84" value="46.3789" /><Key frame="95" value="45.8789" /><Key frame="106" value="60.3809" /><Key frame="117" value="46.8789" /><Key frame="128" value="45.8789" /><Key frame="139" value="60.3809" /><Key frame="150" value="45.8789" /><Key frame="157" value="45.8" /><Key frame="162" value="60.3809" /><Key frame="172" value="45.8789" /><Key frame="183" value="60.3809" /><Key frame="194" value="45.8789" /><Key frame="205" value="60.3809" /><Key frame="216" value="45.8789" /><Key frame="227" value="60.3809" /><Key frame="238" value="45.8789" /><Key frame="252" value="60.1869" /><Key frame="261" value="68.5201" /><Key frame="292" value="70.3897" /><Key frame="303" value="50.3" /><Key frame="309" value="74.8" /><Key frame="322" value="112.061" /><Key frame="334" value="105.846" /><Key frame="342" value="45.8" /><Key frame="350" value="-33.5319" /><Key frame="358" value="-34.541" /><Key frame="375" value="7.55859" /><Key frame="381" value="7.55859" /><Key frame="393" value="10.7497" /><Key frame="409" value="59.3262" /><Key frame="424" value="59.3262" /><Key frame="432" value="63.2162" /><Key frame="444" value="43.5059" /><Key frame="454" value="63.7207" /><Key frame="464" value="43.5059" /><Key frame="474" value="63.8889" /><Key frame="486" value="61.4" /><Key frame="492" value="78.4863" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.37841" ordinateParam="0.879732" /><Tangent side="right" interpType="bezier" abscissaParam="3.17121" ordinateParam="-1.17298" /></Key><Key frame="500" value="75.7997" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.17121" ordinateParam="1.17298" /><Tangent side="right" interpType="bezier" abscissaParam="3.17121" ordinateParam="-1.17298" /></Key><Key frame="508" value="38.175" /><Key frame="517" value="17.8418" /><Key frame="537" value="19.1602" /><Key frame="544" value="18.9625" /><Key frame="555" value="17.8418" /><Key frame="569" value="47.3486" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.15305" ordinateParam="-7.75449" /><Tangent side="right" interpType="bezier" abscissaParam="6.53133" ordinateParam="16.0629" /></Key><Key frame="598" value="112.061" /><Key frame="610" value="105.846" /><Key frame="623" value="45.8" /><Key frame="640" value="38.5959" /><Key frame="664" value="36.9141" /><Key frame="696" value="31.2891" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-9.89785" ordinateParam="1.56501" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key><Key frame="753" value="85.6696" /><Key frame="765" value="72.8925" /><Key frame="771" value="78.0313" /><Key frame="776" value="72.8925" /><Key frame="782" value="78.0313" /><Key frame="787" value="72.8925" /><Key frame="793" value="78.0313" /><Key frame="798" value="72.8925" /><Key frame="804" value="78.0313" /><Key frame="809" value="72.8925" /><Key frame="815" value="78.0313" /><Key frame="820" value="72.8925" /><Key frame="826" value="78.0313" /><Key frame="831" value="72.8925" /><Key frame="837" value="78.0313" /><Key frame="842" value="72.8925" /><Key frame="848" value="78.0313" /><Key frame="853" value="72.8925" /><Key frame="859" value="78.0313" /><Key frame="864" value="72.8925" /><Key frame="870" value="78.0313" /><Key frame="875" value="72.8925" /><Key frame="880" value="78.0313" /><Key frame="886" value="72.8925" /><Key frame="891" value="78.0313" /><Key frame="897" value="72.8925" /><Key frame="903" value="78.0313" /><Key frame="908" value="72.8925" /><Key frame="914" value="78.0313" /><Key frame="919" value="72.8925" /><Key frame="925" value="78.0313" /><Key frame="930" value="72.8925" /><Key frame="936" value="78.0313" /><Key frame="941" value="72.8925" /><Key frame="947" value="78.0313" /><Key frame="952" value="72.8925" /><Key frame="958" value="78.0313" /><Key frame="963" value="72.8925" /><Key frame="970" value="43.8449" /><Key frame="975" value="49.1309" /><Key frame="982" value="41.766" /><Key frame="987" value="49.1309" /><Key frame="988" value="49.1309" /><Key frame="993" value="40.166" /><Key frame="994" value="40.166" /><Key frame="1000" value="46.3238" /><Key frame="1027" value="13.7973" /><Key frame="1040" value="76.1" /><Key frame="1046" value="77.1" /><Key frame="1244" value="77.1" /><Key frame="1258" value="52.5" /><Key frame="1269" value="50.3" /><Key frame="1273" value="51.7442" /><Key frame="1285" value="31.6256" /><Key frame="1293" value="68.1" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" alwaysVisible="1" unit="1"><Key frame="15" value="0.68" /><Key frame="21" value="0.579965" /><Key frame="32" value="0.929701" /><Key frame="39" value="0.926186" /><Key frame="51" value="0" /><Key frame="64" value="0.779438" /><Key frame="73" value="0.779438" /><Key frame="79" value="0.51" /><Key frame="86" value="0.792619" /><Key frame="95" value="0.792619" /><Key frame="101" value="0.33" /><Key frame="108" value="0.779438" /><Key frame="112" value="0.32" /><Key frame="119" value="0.792619" /><Key frame="128" value="0.792619" /><Key frame="133" value="0.54" /><Key frame="141" value="0.779438" /><Key frame="145" value="0.43" /><Key frame="153" value="0.97" /><Key frame="157" value="0.5" /><Key frame="165" value="0.779438" /><Key frame="168" value="0.47" /><Key frame="175" value="0.792619" /><Key frame="178" value="0.35" /><Key frame="185" value="0.779438" /><Key frame="189" value="0.53" /><Key frame="196" value="0.792619" /><Key frame="200" value="0.45" /><Key frame="207" value="0.779438" /><Key frame="211" value="0.48" /><Key frame="218" value="0.792619" /><Key frame="222" value="0.5" /><Key frame="229" value="0.779438" /><Key frame="233" value="0.58" /><Key frame="240" value="0.792619" /><Key frame="243" value="0.76" /><Key frame="252" value="0.473265" /><Key frame="261" value="0.353251" /><Key frame="274" value="0.352373" /><Key frame="292" value="0.351656" /><Key frame="300" value="0.27" /><Key frame="305" value="0.64" /><Key frame="315" value="0.2" /><Key frame="325" value="0.811072" /><Key frame="334" value="0.77" /><Key frame="342" value="0.45" /><Key frame="347" value="0.469244" /><Key frame="358" value="0.469244" /><Key frame="368" value="0.41" /><Key frame="371" value="0.0351493" /><Key frame="375" value="0.891916" /><Key frame="381" value="0.891916" /><Key frame="396" value="0.598418" /><Key frame="402" value="0.459578" /><Key frame="406" value="0.0325131" /><Key frame="424" value="0.0500879" /><Key frame="434" value="0.278559" /><Key frame="444" value="0.0316344" /><Key frame="454" value="0.278559" /><Key frame="464" value="0.0316344" /><Key frame="473" value="0.278559" /><Key frame="486" value="0" /><Key frame="492" value="0.47891" /><Key frame="501" value="0.479789" /><Key frame="508" value="0.509767" /><Key frame="517" value="0.438489" /><Key frame="531" value="0.439367" /><Key frame="537" value="0.439367" /><Key frame="544" value="0.438489" /><Key frame="555" value="0.438489" /><Key frame="569" value="0.881276" /><Key frame="601" value="0.811072" /><Key frame="610" value="0.77" /><Key frame="623" value="0.45" /><Key frame="636" value="0.864675" /><Key frame="643" value="0.96" /><Key frame="651" value="0.75" /><Key frame="664" value="0.864675" /><Key frame="674" value="0.45" /><Key frame="696" value="0.481547" /><Key frame="717" value="0.422671" /><Key frame="753" value="0.456214" /><Key frame="756" value="0.455185" /><Key frame="760" value="0.455185" /><Key frame="765" value="1" /><Key frame="771" value="0.455185" /><Key frame="776" value="1" /><Key frame="782" value="0.455185" /><Key frame="787" value="1" /><Key frame="793" value="0.455185" /><Key frame="798" value="1" /><Key frame="804" value="0.455185" /><Key frame="809" value="1" /><Key frame="815" value="0.455185" /><Key frame="820" value="1" /><Key frame="826" value="0.455185" /><Key frame="831" value="1" /><Key frame="837" value="0.455185" /><Key frame="842" value="1" /><Key frame="848" value="0.455185" /><Key frame="853" value="1" /><Key frame="859" value="0.455185" /><Key frame="864" value="1" /><Key frame="870" value="0.455185" /><Key frame="875" value="1" /><Key frame="880" value="0.455185" /><Key frame="886" value="1" /><Key frame="891" value="0.455185" /><Key frame="897" value="1" /><Key frame="903" value="0.455185" /><Key frame="908" value="1" /><Key frame="914" value="0.455185" /><Key frame="919" value="1" /><Key frame="925" value="0.455185" /><Key frame="930" value="1" /><Key frame="936" value="0.455185" /><Key frame="941" value="1" /><Key frame="947" value="0.455185" /><Key frame="952" value="1" /><Key frame="958" value="0.455185" /><Key frame="963" value="1" /><Key frame="970" value="0.310193" /><Key frame="974" value="0.221441" /><Key frame="975" value="0.221441" /><Key frame="980" value="0.101054" /><Key frame="982" value="0.137961" /><Key frame="987" value="0.221441" /><Key frame="988" value="0.221441" /><Key frame="993" value="0.137961" /><Key frame="994" value="0.137961" /><Key frame="998" value="0.221441" /><Key frame="1007" value="0.137961" /><Key frame="1018" value="1" /><Key frame="1027" value="0.702344" /><Key frame="1040" value="0" /><Key frame="1046" value="0.73" /><Key frame="1057" value="0" /><Key frame="1068" value="0.73" /><Key frame="1079" value="0" /><Key frame="1090" value="0.73" /><Key frame="1101" value="0" /><Key frame="1112" value="0.73" /><Key frame="1123" value="0" /><Key frame="1134" value="0.73" /><Key frame="1145" value="0" /><Key frame="1156" value="0.73" /><Key frame="1167" value="0" /><Key frame="1178" value="0.73" /><Key frame="1189" value="0" /><Key frame="1200" value="0.73" /><Key frame="1211" value="0" /><Key frame="1222" value="0" /><Key frame="1233" value="0.73" /><Key frame="1244" value="0.73" /><Key frame="1247" value="0.22" /><Key frame="1258" value="0.22" /><Key frame="1269" value="0.83" /><Key frame="1273" value="0.2476" /><Key frame="1275" value="0.18" /><Key frame="1285" value="0.58125" /><Key frame="1293" value="0.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="21" value="89.3848" /><Key frame="32" value="-49.9219" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.000873139" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.33333" ordinateParam="0" /></Key><Key frame="39" value="-48.9551" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="4" ordinateParam="0" /></Key><Key frame="51" value="-60.9998" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="62" value="-58.0462" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66666" ordinateParam="-0.565687" /><Tangent side="right" interpType="bezier" abscissaParam="3.66666" ordinateParam="0.565687" /></Key><Key frame="73" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="84" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="95" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="106" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="117" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="128" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="139" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="150" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="161" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="172" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="183" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="194" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="205" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="216" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="227" value="-57.4805" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="238" value="-60.9082" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key><Key frame="252" value="-31.2359" /><Key frame="261" value="-9.66797" /><Key frame="281" value="-11.3379" /><Key frame="292" value="-8.99542" /><Key frame="303" value="-28.4" /><Key frame="319" value="41.4844" /><Key frame="334" value="44.4727" /><Key frame="347" value="79.3652" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.120833" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.33333" ordinateParam="0" /></Key><Key frame="354" value="76.5145" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.33333" ordinateParam="2.85068" /><Tangent side="right" interpType="bezier" abscissaParam="5.66667" ordinateParam="-6.92307" /></Key><Key frame="371" value="7.4707" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-5.66667" ordinateParam="1.04589" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="-0.61523" /></Key><Key frame="381" value="6.85547" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.33333" ordinateParam="0.61523" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key><Key frame="402" value="-52.8223" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-7" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.33333" ordinateParam="0" /></Key><Key frame="409" value="-42.3315" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.33333" ordinateParam="-0.108211" /><Tangent side="right" interpType="bezier" abscissaParam="5" ordinateParam="0.23188" /></Key><Key frame="424" value="-42.0996" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-5" ordinateParam="-0.23188" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="0.154587" /></Key><Key frame="434" value="-29.8828" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="0" /></Key><Key frame="444" value="-47.2852" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="0" /></Key><Key frame="454" value="-29.8828" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="465" value="-44.8418" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="6.66667" ordinateParam="0" /></Key><Key frame="485" value="10.6739" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-6.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3" ordinateParam="0" /></Key><Key frame="494" value="-7.13505" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.33333" ordinateParam="0" /></Key><Key frame="501" value="-6.32813" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.33333" ordinateParam="0" /></Key><Key frame="508" value="-6.90215" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3" ordinateParam="0" /></Key><Key frame="517" value="0.263673" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="4.66667" ordinateParam="0" /></Key><Key frame="531" value="-1.14258" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="4.33333" ordinateParam="0" /></Key><Key frame="544" value="-0.875695" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-0.253907" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0.214844" /></Key><Key frame="555" value="0.263673" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="4.66667" ordinateParam="0" /></Key><Key frame="569" value="-16.4185" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="6.33333" ordinateParam="0" /></Key><Key frame="588" value="3.58009" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.53333" ordinateParam="-9.05177" /><Tangent side="right" interpType="bezier" abscissaParam="1.67017" ordinateParam="3.33486" /></Key><Key frame="595" value="41.4844" /><Key frame="610" value="44.4727" /><Key frame="639" value="-52.3249" /><Key frame="664" value="-54.0527" /><Key frame="699" value="28.5852" /><Key frame="713" value="48.8626" /><Key frame="751" value="82.0441" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.00115495" ordinateParam="-0.00369426" /><Tangent side="right" interpType="bezier" abscissaParam="1.90304" ordinateParam="6.08708" /></Key><Key frame="759" value="102.534" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="765" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="771" value="103.842" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="776" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="782" value="103.605" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="787" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="793" value="103.129" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="798" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="804" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="809" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="815" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="820" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="826" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="831" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="837" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="842" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="848" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="853" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="859" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="864" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="870" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="875" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="880" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="886" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="891" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="897" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="903" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="908" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="914" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="919" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="925" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="930" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="936" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="941" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="947" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="952" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2" ordinateParam="0" /></Key><Key frame="958" value="103.248" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="963" value="83.6971" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.271585" ordinateParam="1.35913" /><Tangent side="right" interpType="bezier" abscissaParam="0.597488" ordinateParam="-2.99009" /></Key><Key frame="974" value="24.6094" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="2.66667" ordinateParam="0" /></Key><Key frame="982" value="29.0039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="987" value="24.6094" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="0.333333" ordinateParam="0" /></Key><Key frame="988" value="24.6094" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.333333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="993" value="29.0039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1.66667" ordinateParam="0" /></Key><Key frame="998" value="24.6094" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="6.66668" ordinateParam="0" /></Key><Key frame="1018" value="32.5195" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-6.66668" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="0" /></Key><Key frame="1028" value="25.5861" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.43094" ordinateParam="6.27415" /><Tangent side="right" interpType="bezier" abscissaParam="0.243094" ordinateParam="-0.627414" /></Key><Key frame="1029" value="48.8626" /><Key frame="1041" value="42.1029" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.0153357" ordinateParam="-0.0201602" /><Tangent side="right" interpType="bezier" abscissaParam="0.885938" ordinateParam="1.16465" /></Key><Key frame="1046" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1057" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1068" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1079" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1090" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1101" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1112" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1123" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1134" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1145" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1156" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1167" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1178" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1189" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1200" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="4" ordinateParam="0" /></Key><Key frame="1212" value="0.938439" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.80091" ordinateParam="1.18793" /><Tangent side="right" interpType="bezier" abscissaParam="2.53394" ordinateParam="-0.791955" /></Key><Key frame="1220" value="-0.900039" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="5.33333" ordinateParam="0" /></Key><Key frame="1236" value="42.8101" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-5.66515" ordinateParam="-1.55564" /><Tangent side="right" interpType="bezier" abscissaParam="2.83257" ordinateParam="0.77782" /></Key><Key frame="1244" value="43.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="1" ordinateParam="0" /></Key><Key frame="1247" value="46.2" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1258" value="46.2" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.66667" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="3.66667" ordinateParam="0" /></Key><Key frame="1269" value="69.6" /><Key frame="1273" value="85.1" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.33333" ordinateParam="0" /><Tangent side="right" interpType="bezier" abscissaParam="6.66667" ordinateParam="0" /></Key><Key frame="1293" value="94.9219" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="12" value="-17.8" /><Key frame="21" value="-9.66797" /><Key frame="32" value="-33.2227" /><Key frame="50" value="-37.7657" /><Key frame="62" value="-47.9883" /><Key frame="73" value="-47.4226" /><Key frame="84" value="-38.9567" /><Key frame="95" value="-38.3203" /><Key frame="106" value="-47.4933" /><Key frame="117" value="-38.9567" /><Key frame="128" value="-38.3203" /><Key frame="139" value="-47.9883" /><Key frame="150" value="-38.3203" /><Key frame="161" value="-47.9883" /><Key frame="172" value="-38.3203" /><Key frame="183" value="-47.9883" /><Key frame="194" value="-38.3203" /><Key frame="205" value="-47.9883" /><Key frame="216" value="-38.3203" /><Key frame="227" value="-47.9883" /><Key frame="238" value="-38.3203" /><Key frame="252" value="-26.4" /><Key frame="268" value="-4.91276" /><Key frame="274" value="-4.6582" /><Key frame="292" value="-5.48284" /><Key frame="303" value="-36.7" /><Key frame="312" value="-34.4" /><Key frame="321" value="-49.834" /><Key frame="347" value="-5.09766" /><Key frame="358" value="-5.09766" /><Key frame="365" value="-8.4" /><Key frame="381" value="-8.08593" /><Key frame="402" value="-59.6734" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-5.90683" ordinateParam="14.9519" /><Tangent side="right" interpType="bezier" abscissaParam="1.68767" ordinateParam="-4.27196" /></Key><Key frame="408" value="-65.7574" /><Key frame="424" value="-66.0938" /><Key frame="434" value="-71.3672" /><Key frame="444" value="-58.2715" /><Key frame="454" value="-71.3672" /><Key frame="464" value="-58.2715" /><Key frame="472" value="-70.0218" /><Key frame="486" value="-21" /><Key frame="492" value="-2.91179" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2" ordinateParam="0.428454" /><Tangent side="right" interpType="bezier" abscissaParam="3" ordinateParam="-0.642681" /></Key><Key frame="501" value="-5.07485" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.08409" ordinateParam="0.901712" /><Tangent side="right" interpType="bezier" abscissaParam="2.74141" ordinateParam="-0.801522" /></Key><Key frame="509" value="-13.7567" /><Key frame="517" value="-6.5918" /><Key frame="531" value="-6.32813" /><Key frame="555" value="-7.01225" /><Key frame="569" value="-18.2375" /><Key frame="597" value="-49.834" /><Key frame="636" value="-43.9453" /><Key frame="664" value="-43.9453" /><Key frame="696" value="-18.0176" /><Key frame="717" value="-14.9414" /><Key frame="753" value="-6.97888" /><Key frame="760" value="-11.3037" /><Key frame="765" value="-5.25998" /><Key frame="771" value="-11.3037" /><Key frame="776" value="-5.25998" /><Key frame="782" value="-11.3037" /><Key frame="787" value="-5.25998" /><Key frame="793" value="-11.3037" /><Key frame="798" value="-5.25998" /><Key frame="804" value="-11.3037" /><Key frame="809" value="-5.25998" /><Key frame="815" value="-11.3037" /><Key frame="820" value="-5.25998" /><Key frame="826" value="-11.3037" /><Key frame="831" value="-5.25998" /><Key frame="837" value="-11.3037" /><Key frame="842" value="-5.25998" /><Key frame="848" value="-11.3037" /><Key frame="853" value="-5.25998" /><Key frame="859" value="-11.3037" /><Key frame="864" value="-5.25998" /><Key frame="870" value="-11.3037" /><Key frame="875" value="-5.25998" /><Key frame="880" value="-11.3037" /><Key frame="886" value="-5.25998" /><Key frame="891" value="-11.3037" /><Key frame="897" value="-5.25998" /><Key frame="903" value="-11.3037" /><Key frame="908" value="-5.25998" /><Key frame="914" value="-11.3037" /><Key frame="919" value="-5.25998" /><Key frame="925" value="-11.3037" /><Key frame="930" value="-5.25998" /><Key frame="936" value="-11.3037" /><Key frame="941" value="-5.25998" /><Key frame="947" value="-11.3037" /><Key frame="952" value="-5.25998" /><Key frame="958" value="-11.3037" /><Key frame="963" value="-5.25998" /><Key frame="970" value="-19.9512" /><Key frame="974" value="-18.457" /><Key frame="975" value="-18.457" /><Key frame="982" value="-16.3477" /><Key frame="987" value="-18.457" /><Key frame="988" value="-18.457" /><Key frame="993" value="-16.3477" /><Key frame="994" value="-16.3477" /><Key frame="998" value="-18.457" /><Key frame="1007" value="-16.3477" /><Key frame="1018" value="-16.4356" /><Key frame="1028" value="-20.8174" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.1483" ordinateParam="4.03975" /><Tangent side="right" interpType="bezier" abscissaParam="2.57796" ordinateParam="-4.84769" /></Key><Key frame="1040" value="-11.4071" /><Key frame="1046" value="-10.7" /><Key frame="1247" value="-23.4" /><Key frame="1258" value="-22.8343" /><Key frame="1269" value="-12.3" /><Key frame="1274" value="-15.9012" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.44044" ordinateParam="1.14017" /><Tangent side="right" interpType="bezier" abscissaParam="5.47366" ordinateParam="-4.33264" /></Key><Key frame="1293" value="-9.58008" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="32" value="1.22808" /><Key frame="39" value="10.7907" /><Key frame="51" value="-14.5999" /><Key frame="63" value="-14.8513" /><Key frame="73" value="-16.0286" /><Key frame="76" value="-1" /><Key frame="85" value="-27.7872" /><Key frame="95" value="-29.9735" /><Key frame="101" value="-2.9" /><Key frame="107" value="-14.8513" /><Key frame="112" value="-30.3" /><Key frame="118" value="-28.2917" /><Key frame="129" value="-29.9735" /><Key frame="134" value="-4.9" /><Key frame="140" value="-14.8513" /><Key frame="145" value="-6.8" /><Key frame="152" value="-29.9735" /><Key frame="157" value="10.7" /><Key frame="164" value="-14.8513" /><Key frame="167" value="-4.9" /><Key frame="174" value="-29.9735" /><Key frame="178" value="-40" /><Key frame="184" value="-14.8513" /><Key frame="189" value="-12.7" /><Key frame="195" value="-29.9735" /><Key frame="200" value="-32.2" /><Key frame="206" value="-14.8513" /><Key frame="211" value="-4.9" /><Key frame="217" value="-29.9735" /><Key frame="222" value="-32.2" /><Key frame="228" value="-14.8513" /><Key frame="233" value="-8.8" /><Key frame="239" value="-29.9735" /><Key frame="252" value="66.5" /><Key frame="261" value="51.1506" /><Key frame="292" value="51.2052" /><Key frame="301" value="73.2" /><Key frame="311" value="77.2" /><Key frame="323" value="77.4974" /><Key frame="334" value="70.2231" /><Key frame="342" value="59.6" /><Key frame="349" value="25.6273" /><Key frame="358" value="26.8046" /><Key frame="371" value="-18.1081" /><Key frame="381" value="-16.0866" /><Key frame="396" value="46.4923" /><Key frame="402" value="88.7682" /><Key frame="424" value="89.5593" /><Key frame="434" value="89.2956" /><Key frame="444" value="73.9193" /><Key frame="454" value="89.2956" /><Key frame="464" value="73.9193" /><Key frame="473" value="89.2956" /><Key frame="486" value="-8.8" /><Key frame="492" value="99.491" /><Key frame="501" value="96.4148" /><Key frame="512" value="15.6246" /><Key frame="520" value="9.40201" /><Key frame="531" value="10.9841" /><Key frame="537" value="11.1598" /><Key frame="544" value="9.4606" /><Key frame="553" value="11.252" /><Key frame="569" value="85.5793" /><Key frame="599" value="77.4974" /><Key frame="610" value="70.2231" /><Key frame="623" value="59.6" /><Key frame="636" value="102.567" /><Key frame="661" value="101.558" /><Key frame="696" value="-19.6023" /><Key frame="753" value="15.1504" /><Key frame="765" value="5.63614" /><Key frame="953" value="5.85691" /><Key frame="961" value="7.48611" /><Key frame="970" value="63.3675" /><Key frame="974" value="67.2348" /><Key frame="975" value="67.2348" /><Key frame="980" value="44.2071" /><Key frame="982" value="44.0313" /><Key frame="987" value="67.2348" /><Key frame="988" value="65.2167" /><Key frame="993" value="44.0313" /><Key frame="994" value="44.0313" /><Key frame="998" value="63.1985" /><Key frame="1007" value="44.0313" /><Key frame="1027" value="19.6449" /><Key frame="1040" value="18.6" /><Key frame="1046" value="-32.2" /><Key frame="1057" value="18.6" /><Key frame="1068" value="-32.2" /><Key frame="1079" value="18.6" /><Key frame="1090" value="-32.2" /><Key frame="1101" value="18.6" /><Key frame="1112" value="-32.2" /><Key frame="1123" value="18.6" /><Key frame="1134" value="-32.2" /><Key frame="1145" value="18.6" /><Key frame="1156" value="-32.2" /><Key frame="1167" value="18.6" /><Key frame="1178" value="-32.2" /><Key frame="1189" value="18.6" /><Key frame="1200" value="-32.2" /><Key frame="1211" value="18.6" /><Key frame="1222" value="18.6" /><Key frame="1236" value="-30.5182" /><Key frame="1244" value="-32.2" /><Key frame="1247" value="6.80004" /><Key frame="1258" value="6.8" /><Key frame="1267" value="-5.90908" /><Key frame="1273" value="16.6" /><Key frame="1285" value="36.1" /><Key frame="1293" value="12.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="12" value="-3.9" /><Key frame="21" value="-14.0685" /><Key frame="39" value="1.90808" /><Key frame="45" value="-7.78897" /><Key frame="51" value="-3.43369" /><Key frame="56" value="-7.86569" /><Key frame="62" value="-3.54141" /><Key frame="67" value="-7.8625" /><Key frame="73" value="-3.53649" /><Key frame="78" value="-7.87291" /><Key frame="84" value="-3.53655" /><Key frame="89" value="-7.86206" /><Key frame="95" value="-3.54567" /><Key frame="100" value="-7.87379" /><Key frame="106" value="-3.53963" /><Key frame="111" value="-7.87192" /><Key frame="117" value="-3.5455" /><Key frame="122" value="-7.86252" /><Key frame="128" value="-3.54363" /><Key frame="133" value="-7.87388" /><Key frame="139" value="-3.54451" /><Key frame="144" value="-7.87199" /><Key frame="150" value="-3.54665" /><Key frame="155" value="-7.87181" /><Key frame="161" value="-3.54724" /><Key frame="166" value="-7.87202" /><Key frame="172" value="-3.54419" /><Key frame="177" value="-7.87191" /><Key frame="183" value="-3.5401" /><Key frame="188" value="-7.8719" /><Key frame="194" value="-3.54183" /><Key frame="199" value="-7.87194" /><Key frame="205" value="-3.54483" /><Key frame="210" value="-7.87177" /><Key frame="216" value="-3.54095" /><Key frame="221" value="-7.87192" /><Key frame="227" value="-3.54366" /><Key frame="232" value="-7.87102" /><Key frame="238" value="-3.5359" /><Key frame="243" value="-7.64515" /><Key frame="247" value="-28.0589" /><Key frame="255" value="-27.2866" /><Key frame="290" value="-35.5252" /><Key frame="322" value="-13.1506" /><Key frame="344" value="-20.1" /><Key frame="347" value="-2.28516" /><Key frame="360" value="-2.28516" /><Key frame="365" value="-5.49336" /><Key frame="371" value="-3.21245" /><Key frame="381" value="-3.21755" /><Key frame="390" value="-15.5698" /><Key frame="406" value="-5.85677" /><Key frame="415" value="-5.49177" /><Key frame="419" value="-8.59836" /><Key frame="424" value="-4.4675" /><Key frame="429" value="-8.59836" /><Key frame="434" value="-4.81905" /><Key frame="460" value="-4.81905" /><Key frame="464" value="-8.59836" /><Key frame="469" value="-4.4675" /><Key frame="473" value="-8.59836" /><Key frame="479" value="-4.81905" /><Key frame="501" value="-14.1" /><Key frame="537" value="-6.30079" /><Key frame="555" value="-2.67372" /><Key frame="569" value="-12.1674" /><Key frame="577" value="-8.19115" /><Key frame="589" value="-16.6" /><Key frame="598" value="-13.1506" /><Key frame="625" value="-20.1" /><Key frame="649" value="-3.9" /><Key frame="696" value="-55.0907" /><Key frame="717" value="-59.462" /><Key frame="753" value="-6.06244" /><Key frame="760" value="-3.47192" /><Key frame="765" value="-9" /><Key frame="771" value="-3.14056" /><Key frame="776" value="-10.1278" /><Key frame="782" value="-3.14451" /><Key frame="787" value="-10.1281" /><Key frame="793" value="-3.13935" /><Key frame="798" value="-10.1379" /><Key frame="804" value="-3.13122" /><Key frame="809" value="-10.0652" /><Key frame="815" value="-3.10264" /><Key frame="820" value="-10.4919" /><Key frame="826" value="-3.0873" /><Key frame="831" value="-10.0316" /><Key frame="837" value="-3.09953" /><Key frame="842" value="-10.5115" /><Key frame="848" value="-3.1222" /><Key frame="853" value="-10.1326" /><Key frame="859" value="-3.13851" /><Key frame="864" value="-10.5115" /><Key frame="870" value="-3.13097" /><Key frame="875" value="-10.134" /><Key frame="881" value="-3.13504" /><Key frame="886" value="-10.5115" /><Key frame="892" value="-3.11789" /><Key frame="897" value="-10.0673" /><Key frame="903" value="-3.10467" /><Key frame="908" value="-10.5115" /><Key frame="914" value="-3.10724" /><Key frame="919" value="-10.106" /><Key frame="925" value="-3.15892" /><Key frame="930" value="-10.5115" /><Key frame="936" value="-3.20531" /><Key frame="941" value="-10.1382" /><Key frame="947" value="-3.23942" /><Key frame="952" value="-10.5115" /><Key frame="958" value="-3.27384" /><Key frame="963" value="-10.1409" /><Key frame="970" value="-0.326132" /><Key frame="1018" value="-0.718762" /><Key frame="1031" value="-17.6827" /><Key frame="1040" value="-2.80743" /><Key frame="1046" value="-2.81184" /><Key frame="1051" value="-7.13766" /><Key frame="1057" value="-2.72874" /><Key frame="1062" value="-7.12249" /><Key frame="1068" value="-2.82517" /><Key frame="1073" value="-7.13857" /><Key frame="1079" value="-2.72883" /><Key frame="1084" value="-7.12293" /><Key frame="1090" value="-2.82582" /><Key frame="1095" value="-7.13804" /><Key frame="1101" value="-2.72826" /><Key frame="1106" value="-7.12429" /><Key frame="1112" value="-2.82531" /><Key frame="1117" value="-7.14291" /><Key frame="1123" value="-2.73434" /><Key frame="1128" value="-7.12841" /><Key frame="1134" value="-2.82522" /><Key frame="1139" value="-7.1398" /><Key frame="1145" value="-2.72915" /><Key frame="1178" value="-56.85" /><Key frame="1211" value="-2.72821" /><Key frame="1216" value="-7.15368" /><Key frame="1222" value="-2.73957" /><Key frame="1227" value="-7.12527" /><Key frame="1233" value="-2.79793" /><Key frame="1238" value="-7.25418" /><Key frame="1244" value="-2.84433" /><Key frame="1247" value="-2.95702" /><Key frame="1258" value="-3.28266" /><Key frame="1269" value="-10.4411" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="21" value="-2.19723" /><Key frame="39" value="-1.49406" /><Key frame="45" value="-1.49421" /><Key frame="51" value="-1.4941" /><Key frame="56" value="0.671451" /><Key frame="62" value="3.73251" /><Key frame="67" value="3.95476" /><Key frame="73" value="3.99999" /><Key frame="78" value="0.880521" /><Key frame="84" value="-3.56279" /><Key frame="89" value="-3.92614" /><Key frame="95" value="-3.99972" /><Key frame="100" value="-0.557007" /><Key frame="106" value="3.98401" /><Key frame="111" value="0.218737" /><Key frame="117" value="-3.56779" /><Key frame="122" value="-1.50944" /><Key frame="128" value="-3.56442" /><Key frame="133" value="-0.309048" /><Key frame="139" value="3.98749" /><Key frame="144" value="0.996058" /><Key frame="150" value="-3.99162" /><Key frame="155" value="-0.554263" /><Key frame="161" value="3.98675" /><Key frame="166" value="0.995598" /><Key frame="172" value="-3.98709" /><Key frame="177" value="-0.551679" /><Key frame="183" value="3.9895" /><Key frame="188" value="1.0603" /><Key frame="194" value="-3.81751" /><Key frame="199" value="-0.455041" /><Key frame="205" value="3.98701" /><Key frame="210" value="0.964267" /><Key frame="216" value="-4.06826" /><Key frame="221" value="-0.597938" /><Key frame="227" value="3.9858" /><Key frame="232" value="0.55202" /><Key frame="238" value="-3.98509" /><Key frame="243" value="-3.99384" /><Key frame="247" value="9.25847" /><Key frame="248" value="9.49219" /><Key frame="254" value="9.05273" /><Key frame="255" value="8.91971" /><Key frame="256" value="9.05273" /><Key frame="266" value="8.52539" /><Key frame="271" value="9.93164" /><Key frame="275" value="8.52539" /><Key frame="279" value="8.34961" /><Key frame="284" value="7.99804" /><Key frame="290" value="7.52994" /><Key frame="302" value="7.9" /><Key frame="322" value="2.18832" /><Key frame="334" value="-0.878909" /><Key frame="347" value="-0.527345" /><Key frame="360" value="-0.791018" /><Key frame="365" value="-0.790793" /><Key frame="371" value="-0.789714" /><Key frame="381" value="-0.781496" /><Key frame="390" value="-0.761682" /><Key frame="406" value="-0.652884" /><Key frame="424" value="0" /><Key frame="434" value="2.9" /><Key frame="444" value="-2.9" /><Key frame="469" value="0" /><Key frame="479" value="2.9" /><Key frame="494" value="-2.46093" /><Key frame="501" value="-3.42773" /><Key frame="518" value="-3.6914" /><Key frame="526" value="0" /><Key frame="531" value="0" /><Key frame="537" value="2.99671" /><Key frame="541" value="0" /><Key frame="547" value="3" /><Key frame="555" value="-0.607336" /><Key frame="569" value="3.18237" /><Key frame="577" value="-1.57779" /><Key frame="598" value="2.18832" /><Key frame="610" value="-0.878909" /><Key frame="636" value="-1.40625" /><Key frame="664" value="-1.14258" /><Key frame="696" value="-1.67883" /><Key frame="717" value="-1.17949" /><Key frame="753" value="3.95296" /><Key frame="760" value="-0.164168" /><Key frame="771" value="-4.99628" /><Key frame="776" value="-4.99087" /><Key frame="782" value="-4.96401" /><Key frame="787" value="-4.903" /><Key frame="793" value="-4.52693" /><Key frame="798" value="-2.71073" /><Key frame="804" value="0.44704" /><Key frame="809" value="2.7881" /><Key frame="813" value="3.74324" /><Key frame="815" value="3.27361" /><Key frame="820" value="-1.06154" /><Key frame="826" value="-6.32857" /><Key frame="828" value="-7.48378" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.504501" ordinateParam="0.146799" /><Tangent side="right" interpType="bezier" abscissaParam="0.756752" ordinateParam="-0.220198" /></Key><Key frame="831" value="-8.24739" /><Key frame="837" value="-8.90055" /><Key frame="848" value="-10.0337" /><Key frame="853" value="-10.4725" /><Key frame="859" value="-10.913" /><Key frame="864" value="-11.1" /><Key frame="870" value="-3.90637" /><Key frame="875" value="5.65263" /><Key frame="881" value="11.431" /><Key frame="892" value="-4.85188" /><Key frame="897" value="-9.78668" /><Key frame="903" value="-9.79882" /><Key frame="914" value="-9.80382" /><Key frame="919" value="-9.80075" /><Key frame="925" value="-4.33143" /><Key frame="936" value="11.4795" /><Key frame="941" value="11.628" /><Key frame="947" value="11.6599" /><Key frame="952" value="11.7" /><Key frame="958" value="8.28017" /><Key frame="963" value="3.114" /><Key frame="970" value="-2.54103" /><Key frame="974" value="-2.81249" /><Key frame="980" value="-0.703127" /><Key frame="982" value="-0.878909" /><Key frame="987" value="-2.81249" /><Key frame="988" value="-2.81249" /><Key frame="993" value="-0.878909" /><Key frame="994" value="-0.878909" /><Key frame="998" value="-2.81249" /><Key frame="1018" value="1.83304" /><Key frame="1031" value="0.322218" /><Key frame="1040" value="-4.00171" /><Key frame="1046" value="-4.00276" /><Key frame="1051" value="-0.559643" /><Key frame="1057" value="3.98642" /><Key frame="1062" value="0.55285" /><Key frame="1068" value="-3.98619" /><Key frame="1073" value="-0.878647" /><Key frame="1079" value="3.22907" /><Key frame="1084" value="0.122669" /><Key frame="1090" value="-3.98963" /><Key frame="1095" value="-0.880595" /><Key frame="1101" value="3.23127" /><Key frame="1106" value="0.121407" /><Key frame="1112" value="-3.98834" /><Key frame="1117" value="-0.735647" /><Key frame="1123" value="3.56829" /><Key frame="1128" value="0.530531" /><Key frame="1134" value="-3.48452" /><Key frame="1139" value="-0.65104" /><Key frame="1145" value="4.07178" /><Key frame="1178" value="3.32535" /><Key frame="1211" value="1.55599" /><Key frame="1216" value="1.2747" /><Key frame="1222" value="0.92771" /><Key frame="1227" value="0.637184" /><Key frame="1233" value="0.285615" /><Key frame="1238" value="-0.00715319" /><Key frame="1244" value="-0.361206" /><Key frame="1247" value="-1.91077" /><Key frame="1258" value="-1.93576" /><Key frame="1269" value="-1.37146" /><Key frame="1285" value="-1.3523" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" alwaysVisible="1" unit="0"><Key frame="12" value="-3.2" /><Key frame="21" value="2.58355" /><Key frame="39" value="-2.31873" /><Key frame="45" value="-0.138786" /><Key frame="51" value="-2.86037" /><Key frame="56" value="-0.237351" /><Key frame="62" value="-2.86792" /><Key frame="67" value="-0.233794" /><Key frame="73" value="-2.85977" /><Key frame="78" value="-0.245345" /><Key frame="84" value="-2.85418" /><Key frame="89" value="-0.233313" /><Key frame="95" value="-2.87689" /><Key frame="100" value="-0.246324" /><Key frame="106" value="-2.86111" /><Key frame="111" value="-0.244248" /><Key frame="117" value="-2.87145" /><Key frame="122" value="-0.23381" /><Key frame="128" value="-2.87436" /><Key frame="133" value="-0.246422" /><Key frame="139" value="-2.87009" /><Key frame="144" value="-0.244323" /><Key frame="150" value="-2.86753" /><Key frame="155" value="-0.244125" /><Key frame="161" value="-2.87528" /><Key frame="166" value="-0.244354" /><Key frame="172" value="-2.86558" /><Key frame="177" value="-0.244235" /><Key frame="183" value="-2.85941" /><Key frame="188" value="-0.244232" /><Key frame="194" value="-2.86135" /><Key frame="199" value="-0.24427" /><Key frame="205" value="-2.87083" /><Key frame="210" value="-0.244084" /><Key frame="216" value="-2.85986" /><Key frame="221" value="-0.244251" /><Key frame="227" value="-2.86786" /><Key frame="232" value="-0.243245" /><Key frame="238" value="-2.85031" /><Key frame="243" value="0.243462" /><Key frame="247" value="9.88012" /><Key frame="255" value="9.88388" /><Key frame="290" value="14.5506" /><Key frame="322" value="2.224" /><Key frame="344" value="7.9" /><Key frame="347" value="-3.2" /><Key frame="360" value="-0.791018" /><Key frame="365" value="0.39608" /><Key frame="371" value="-0.931893" /><Key frame="381" value="-1.28987" /><Key frame="390" value="4.83232" /><Key frame="406" value="-0.643797" /><Key frame="415" value="-0.277475" /><Key frame="419" value="1.39246" /><Key frame="424" value="-0.189585" /><Key frame="429" value="1.39246" /><Key frame="434" value="-0.277475" /><Key frame="460" value="-0.277475" /><Key frame="464" value="1.39246" /><Key frame="469" value="-0.189585" /><Key frame="473" value="1.39246" /><Key frame="479" value="-0.277475" /><Key frame="501" value="5.3" /><Key frame="537" value="1.15074" /><Key frame="555" value="-0.560973" /><Key frame="569" value="2.31047" /><Key frame="577" value="1.15823" /><Key frame="589" value="7.8" /><Key frame="598" value="2.224" /><Key frame="625" value="7.9" /><Key frame="649" value="-1.5" /><Key frame="696" value="22.9742" /><Key frame="717" value="23.6618" /><Key frame="753" value="0.97619" /><Key frame="760" value="-2.06658" /><Key frame="765" value="0.92617" /><Key frame="771" value="-2.21029" /><Key frame="776" value="0.968011" /><Key frame="782" value="-2.20795" /><Key frame="787" value="0.966814" /><Key frame="793" value="-2.19627" /><Key frame="798" value="0.950348" /><Key frame="804" value="-2.17793" /><Key frame="809" value="1.12216" /><Key frame="815" value="-2.11316" /><Key frame="820" value="1.73872" /><Key frame="826" value="-2.08982" /><Key frame="831" value="1.1963" /><Key frame="837" value="-2.10359" /><Key frame="842" value="1.71718" /><Key frame="848" value="-2.1641" /><Key frame="853" value="0.957592" /><Key frame="859" value="-2.19081" /><Key frame="864" value="1.71718" /><Key frame="870" value="-2.19307" /><Key frame="875" value="0.954767" /><Key frame="881" value="-2.18881" /><Key frame="886" value="1.71718" /><Key frame="892" value="-2.15819" /><Key frame="897" value="1.1165" /><Key frame="903" value="-2.11344" /><Key frame="908" value="1.71718" /><Key frame="914" value="-2.13004" /><Key frame="919" value="1.02656" /><Key frame="925" value="-2.24246" /><Key frame="930" value="1.71718" /><Key frame="936" value="-2.33727" /><Key frame="941" value="0.949993" /><Key frame="947" value="-2.42884" /><Key frame="952" value="1.71718" /><Key frame="958" value="-2.52614" /><Key frame="963" value="0.947031" /><Key frame="970" value="-2.49845" /><Key frame="1018" value="-2.52826" /><Key frame="1031" value="6.12083" /><Key frame="1040" value="-1.24394" /><Key frame="1046" value="-1.24272" /><Key frame="1051" value="1.36947" /><Key frame="1057" value="-1.08795" /><Key frame="1062" value="1.3965" /><Key frame="1068" value="-1.27733" /><Key frame="1073" value="1.36812" /><Key frame="1079" value="-1.08895" /><Key frame="1084" value="1.39545" /><Key frame="1090" value="-1.27814" /><Key frame="1095" value="1.36931" /><Key frame="1101" value="-1.08723" /><Key frame="1106" value="1.3926" /><Key frame="1112" value="-1.27744" /><Key frame="1117" value="1.35857" /><Key frame="1123" value="-1.10059" /><Key frame="1128" value="1.38363" /><Key frame="1134" value="-1.27721" /><Key frame="1139" value="1.36535" /><Key frame="1145" value="-1.08838" /><Key frame="1178" value="22.8857" /><Key frame="1211" value="-1.08221" /><Key frame="1216" value="1.32165" /><Key frame="1222" value="-1.10563" /><Key frame="1227" value="1.39271" /><Key frame="1233" value="-1.22032" /><Key frame="1238" value="1.11782" /><Key frame="1244" value="-1.3129" /><Key frame="1247" value="-1.49615" /><Key frame="1258" value="-1.04452" /><Key frame="1269" value="1.97777" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="21" value="-24.2" /><Key frame="34" value="-10.2352" /><Key frame="40" value="-21.8848" /><Key frame="45" value="-11.4242" /><Key frame="51" value="-21.8848" /><Key frame="56" value="-13.2845" /><Key frame="62" value="-21.9727" /><Key frame="67" value="-13.2845" /><Key frame="73" value="-21.9727" /><Key frame="78" value="-13.2845" /><Key frame="84" value="-21.9727" /><Key frame="89" value="-13.2845" /><Key frame="95" value="-21.9727" /><Key frame="100" value="-13.2845" /><Key frame="106" value="-21.9727" /><Key frame="111" value="-13.2845" /><Key frame="117" value="-21.9727" /><Key frame="122" value="-13.2845" /><Key frame="128" value="-21.9727" /><Key frame="133" value="-13.2845" /><Key frame="139" value="-21.9727" /><Key frame="144" value="-8.57029" /><Key frame="150" value="-21.9727" /><Key frame="155" value="-13.2845" /><Key frame="161" value="-21.9727" /><Key frame="166" value="-8.57029" /><Key frame="172" value="-21.9727" /><Key frame="177" value="-13.2845" /><Key frame="183" value="-21.9727" /><Key frame="188" value="-8.57029" /><Key frame="194" value="-21.9727" /><Key frame="199" value="-13.2845" /><Key frame="205" value="-21.9727" /><Key frame="210" value="-8.57029" /><Key frame="216" value="-21.9727" /><Key frame="221" value="-13.2845" /><Key frame="227" value="-21.9727" /><Key frame="232" value="-9.243" /><Key frame="238" value="-21.9727" /><Key frame="243" value="-9.66345" /><Key frame="252" value="-7.77353" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.421751" ordinateParam="-0.65588" /><Tangent side="right" interpType="bezier" abscissaParam="3.59715" ordinateParam="5.59406" /></Key><Key frame="265" value="19.3" /><Key frame="274" value="13.623" /><Key frame="284" value="19.3" /><Key frame="293" value="17.4" /><Key frame="299" value="8" /><Key frame="305" value="12.1" /><Key frame="320" value="-21.8848" /><Key frame="329" value="-4.8" /><Key frame="336" value="-12.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.1102" ordinateParam="0.08367" /><Tangent side="right" interpType="bezier" abscissaParam="3.13153" ordinateParam="-2.37762" /></Key><Key frame="347" value="-21.0348" /><Key frame="358" value="1.75" /><Key frame="364" value="2.3" /><Key frame="375" value="-22.15" /><Key frame="381" value="-22.6" /><Key frame="390" value="-14" /><Key frame="408" value="-23.25" /><Key frame="414" value="-20.8348" /><Key frame="424" value="-2.2" /><Key frame="429" value="-12.8" /><Key frame="435" value="-2.3" /><Key frame="444" value="-2.2" /><Key frame="452" value="-5.95" /><Key frame="460" value="-21.8848" /><Key frame="469" value="-2.2" /><Key frame="473" value="-12.8" /><Key frame="478" value="-2.2" /><Key frame="490" value="2.3" /><Key frame="502" value="-16.332" /><Key frame="518" value="-21.0212" /><Key frame="531" value="-15.754" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.73873" ordinateParam="-4.55365" /><Tangent side="right" interpType="bezier" abscissaParam="1.72557" ordinateParam="2.10168" /></Key><Key frame="537" value="-0.853244" /><Key frame="541" value="-12.1649" /><Key frame="546" value="-2.2" /><Key frame="551" value="-12.8" /><Key frame="555" value="-2.2" /><Key frame="563" value="-2.61197" /><Key frame="572" value="-24.6" /><Key frame="585" value="14.3054" /><Key frame="596" value="-21.8848" /><Key frame="605" value="-4.8" /><Key frame="617" value="-12.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.41621" ordinateParam="2.59377" /><Tangent side="right" interpType="bezier" abscissaParam="6.26305" ordinateParam="-4.75524" /></Key><Key frame="639" value="-21.8848" /><Key frame="649" value="-6.15" /><Key frame="655" value="-2.2" /><Key frame="666" value="-12.8" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.84909" ordinateParam="3.00028" /><Tangent side="right" interpType="bezier" abscissaParam="4.14413" ordinateParam="-4.36404" /></Key><Key frame="682" value="-21.8848" /><Key frame="691" value="-6.05" /><Key frame="696" value="-12.8" /><Key frame="702" value="-2.31892" /><Key frame="754" value="-21.8848" /><Key frame="759" value="-10.1163" /><Key frame="765" value="-21.8848" /><Key frame="770" value="-10.1163" /><Key frame="776" value="-21.8848" /><Key frame="781" value="-10.1163" /><Key frame="787" value="-21.8848" /><Key frame="792" value="-10.1163" /><Key frame="798" value="-21.8848" /><Key frame="803" value="-10.1163" /><Key frame="809" value="-21.8848" /><Key frame="814" value="-9.99734" /><Key frame="820" value="-21.8848" /><Key frame="825" value="-9.99734" /><Key frame="831" value="-21.8848" /><Key frame="836" value="-9.99734" /><Key frame="842" value="-21.8848" /><Key frame="847" value="-9.99734" /><Key frame="853" value="-21.8848" /><Key frame="858" value="-9.99734" /><Key frame="864" value="-21.8848" /><Key frame="869" value="-9.99734" /><Key frame="875" value="-21.8848" /><Key frame="880" value="-9.99734" /><Key frame="886" value="-21.8848" /><Key frame="891" value="-9.99734" /><Key frame="897" value="-21.8848" /><Key frame="902" value="-9.99734" /><Key frame="908" value="-21.8848" /><Key frame="913" value="-9.99734" /><Key frame="919" value="-21.8848" /><Key frame="924" value="-9.99734" /><Key frame="930" value="-21.8848" /><Key frame="935" value="-9.99734" /><Key frame="941" value="-21.8848" /><Key frame="946" value="-9.99734" /><Key frame="952" value="-21.8848" /><Key frame="957" value="-9.99734" /><Key frame="964" value="-21.8848" /><Key frame="970" value="-17.0508" /><Key frame="975" value="-4.6" /><Key frame="980" value="-16.9629" /><Key frame="982" value="-16.1615" /><Key frame="987" value="-7.9" /><Key frame="988" value="-8.25676" /><Key frame="993" value="-16.875" /><Key frame="998" value="-7.9" /><Key frame="1018" value="-32.4" /><Key frame="1040" value="-21.8848" /><Key frame="1045" value="-21.2121" /><Key frame="1051" value="-8.17272" /><Key frame="1057" value="-21.8848" /><Key frame="1062" value="-8.17272" /><Key frame="1068" value="-21.8848" /><Key frame="1073" value="-8.17272" /><Key frame="1079" value="-21.8848" /><Key frame="1084" value="-8.17272" /><Key frame="1090" value="-21.8848" /><Key frame="1095" value="-8.17272" /><Key frame="1100" value="-21.8848" /><Key frame="1101" value="-21.8848" /><Key frame="1106" value="-8.33245" /><Key frame="1112" value="-21.8848" /><Key frame="1117" value="-8.33245" /><Key frame="1123" value="-21.8848" /><Key frame="1128" value="-8.33245" /><Key frame="1134" value="-21.8848" /><Key frame="1139" value="-8.33245" /><Key frame="1145" value="-21.8848" /><Key frame="1150" value="-8.33245" /><Key frame="1156" value="-21.8848" /><Key frame="1161" value="-8.33245" /><Key frame="1167" value="-21.8848" /><Key frame="1172" value="-8.33245" /><Key frame="1178" value="-21.8848" /><Key frame="1183" value="-8.33245" /><Key frame="1189" value="-21.8848" /><Key frame="1194" value="-8.33245" /><Key frame="1200" value="-21.8848" /><Key frame="1205" value="-8.33245" /><Key frame="1211" value="-21.8848" /><Key frame="1216" value="-8.33245" /><Key frame="1222" value="-21.8848" /><Key frame="1227" value="-8.33245" /><Key frame="1233" value="-21.8848" /><Key frame="1238" value="-8.33245" /><Key frame="1244" value="-21.8848" /><Key frame="1249" value="-21.8848" /><Key frame="1258" value="-10.9863" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.027" ordinateParam="-4.05479" /><Tangent side="right" interpType="bezier" abscissaParam="1.57656" ordinateParam="3.15373" /></Key><Key frame="1265" value="0.692751" /><Key frame="1273" value="-17.3" /><Key frame="1285" value="18.8352" /><Key frame="1295" value="26.8841" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="21" value="0.85" /><Key frame="44" value="50.3226" /><Key frame="51" value="24.584" /><Key frame="62" value="23.0273" /><Key frame="72" value="22.8591" /><Key frame="84" value="-22.0182" /><Key frame="93" value="-22.8591" /><Key frame="106" value="23.0273" /><Key frame="117" value="-21.3455" /><Key frame="126" value="-22.6909" /><Key frame="139" value="23.0273" /><Key frame="150" value="-23.0273" /><Key frame="161" value="23.0273" /><Key frame="172" value="-23.0273" /><Key frame="183" value="23.0273" /><Key frame="194" value="-23.0273" /><Key frame="205" value="23.0273" /><Key frame="216" value="-23.0273" /><Key frame="227" value="23.0273" /><Key frame="238" value="-21.0091" /><Key frame="245" value="0" /><Key frame="261" value="15.9856" /><Key frame="274" value="16.4356" /><Key frame="289" value="16.3857" /><Key frame="295" value="16.1" /><Key frame="305" value="27" /><Key frame="314" value="14" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-1.55996" ordinateParam="0.176302" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key><Key frame="406" value="0" /><Key frame="420" value="-0.1" /><Key frame="434" value="-16.05" /><Key frame="443" value="7.9" /><Key frame="454" value="-13.1" /><Key frame="470" value="7.85" /><Key frame="490" value="7.8" /><Key frame="498" value="79.4" /><Key frame="518" value="72.4" /><Key frame="546" value="68.9" /><Key frame="563" value="8.86568" /><Key frame="639" value="9.4" /><Key frame="660" value="-18.3" /><Key frame="682" value="7.9" /><Key frame="798" value="9.9" /><Key frame="809" value="-50" /><Key frame="842" value="-50" /><Key frame="853" value="0" /><Key frame="886" value="0.1" /><Key frame="897" value="48" /><Key frame="919" value="37.5" /><Key frame="930" value="0.9" /><Key frame="941" value="0.7" /><Key frame="952" value="-28.8" /><Key frame="970" value="-0.175782" /><Key frame="1018" value="-0.175782" /><Key frame="1044" value="-23.3637" /><Key frame="1057" value="23.0273" /><Key frame="1068" value="-23.0273" /><Key frame="1079" value="23.0273" /><Key frame="1090" value="-23.0273" /><Key frame="1101" value="23.0273" /><Key frame="1112" value="-23.0273" /><Key frame="1123" value="23.0273" /><Key frame="1134" value="-23.0273" /><Key frame="1145" value="23.0273" /><Key frame="1156" value="-23.0273" /><Key frame="1247" value="30" /><Key frame="1258" value="0.439454" /><Key frame="1273" value="6.1" /><Key frame="1293" value="-3.90973" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Init &amp; Reset (1)" id="14" localization="8" tooltip="Rests robot to standing pose, deactivates autonomous moves and basic awareness." x="1263" y="1260"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
            self.ba = ALProxy("ALBasicAwareness")
            self.amoves = ALProxy("ALAutonomousMoves")
        except Exception as exc:
            self.log("Error getting required modules: %s" % str(exc))

    def onUnload(self):
        try:
            self.amoves.setBackgroundStrategy("backToNeutral")
        except Exception as exc:
            self.log("Unable to enable breathing: %s" % str(exc))
        try:
            self.ba.startAwareness()
        except Exception as exc:
            self.log("Unable to start awareness: %s" % str(exc))
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        try:
            self.amoves.setBackgroundStrategy("none")
        except Exception as exc:
            self.log("Unable to disable autonomous moves: %s" % str(exc))
        try:
            self.ba.stopAwareness()
        except Exception as exc:
            self.log("Unable to stop awareness: %s" % str(exc))

        self.postureProxy.setMaxTryNumber(3)
        result = self.postureProxy.goToPosture("Stand", 0.8)
        if(result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="4" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="Say" id="16" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="1483" y="898"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello! ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Hallo]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello!]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>5</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Say Text" id="31" localization="8" tooltip="Say the text received on its input." x="2322" y="983"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="101" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="ChatBot" id="32" localization="8" tooltip="" x="2465" y="770"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import re
import sys
import hashlib

if sys.version_info >= (3, 0):
    from urllib.request import build_opener, HTTPCookieProcessor, urlopen
    from urllib.parse import urlencode
    import http.cookiejar as cookielib

else:
    from urllib import urlencode, urlopen
    from urllib2 import build_opener, HTTPCookieProcessor
    import cookielib

from collections import OrderedDict

import uuid
import xml.dom.minidom

"""
    chatterbotapi
    Copyright (C) 2011 pierredavidbelanger@gmail.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

#################################################
# API
#################################################

class ChatterBotType:

    CLEVERBOT = 1
    JABBERWACKY = 2
    PANDORABOTS = 3

class ChatterBotFactory:

    def create(self, type, arg = None):
        if type == ChatterBotType.CLEVERBOT:
            return _Cleverbot('http://www.cleverbot.com', 'http://www.cleverbot.com/webservicemin?uc=777&botapi=chatterbotapi', 35)
        elif type == ChatterBotType.JABBERWACKY:
            return _Cleverbot('http://jabberwacky.com', 'http://jabberwacky.com/webservicemin?botapi=chatterbotapi', 29)
        elif type == ChatterBotType.PANDORABOTS:
            if arg == None:
                raise Exception('PANDORABOTS needs a botid arg')
            return _Pandorabots(arg)
        return None

class ChatterBot:

    def create_session(self):
        return None

class ChatterBotSession:

    def think_thought(self, thought):
        return thought

    def think(self, text):
        thought = ChatterBotThought()
        thought.text = text
        return self.think_thought(thought).text

class ChatterBotThought:

    pass

#################################################
# Cleverbot impl
#################################################

class _Cleverbot(ChatterBot):

    def __init__(self, baseUrl, serviceUrl, endIndex):
        self.baseUrl = baseUrl
        self.serviceUrl = serviceUrl
        self.endIndex = endIndex

    def create_session(self):
        return _CleverbotSession(self)

class _CleverbotSession(ChatterBotSession):

    def __init__(self, bot):
        self.bot = bot
        self.vars = OrderedDict()
        #self.vars['start'] = 'y'
        self.vars['stimulus'] = ''
        self.vars['islearning'] = '1'
        self.vars['icognoid'] = 'wsf'
        #self.vars['fno'] = '0'
        #self.vars['sub'] = 'Say'
        #self.vars['cleanslate'] = 'false'
        self.cookieJar = cookielib.CookieJar()
        self.opener = build_opener(HTTPCookieProcessor(self.cookieJar))
        self.opener.open(self.bot.baseUrl)

    def think_thought(self, thought):
        self.vars['stimulus'] = thought.text
        data = urlencode(self.vars)
        data_to_digest = data[9:self.bot.endIndex]
        data_digest = hashlib.md5(data_to_digest.encode('utf-8')).hexdigest()
        data = data + '&icognocheck=' + data_digest
        url_response = self.opener.open(self.bot.serviceUrl, data.encode('utf-8'))
        response = str(url_response.read())
        response_values = re.split(r'\\r|\r', response)
        #self.vars['??'] = _utils_string_at_index(response_values, 0)
        self.vars['sessionid'] = _utils_string_at_index(response_values, 1)
        self.vars['logurl'] = _utils_string_at_index(response_values, 2)
        self.vars['vText8'] = _utils_string_at_index(response_values, 3)
        self.vars['vText7'] = _utils_string_at_index(response_values, 4)
        self.vars['vText6'] = _utils_string_at_index(response_values, 5)
        self.vars['vText5'] = _utils_string_at_index(response_values, 6)
        self.vars['vText4'] = _utils_string_at_index(response_values, 7)
        self.vars['vText3'] = _utils_string_at_index(response_values, 8)
        self.vars['vText2'] = _utils_string_at_index(response_values, 9)
        self.vars['prevref'] = _utils_string_at_index(response_values, 10)
        #self.vars['??'] = _utils_string_at_index(response_values, 11)
#        self.vars['emotionalhistory'] = _utils_string_at_index(response_values, 12)
#        self.vars['ttsLocMP3'] = _utils_string_at_index(response_values, 13)
#        self.vars['ttsLocTXT'] = _utils_string_at_index(response_values, 14)
#        self.vars['ttsLocTXT3'] = _utils_string_at_index(response_values, 15)
#        self.vars['ttsText'] = _utils_string_at_index(response_values, 16)
#        self.vars['lineRef'] = _utils_string_at_index(response_values, 17)
#        self.vars['lineURL'] = _utils_string_at_index(response_values, 18)
#        self.vars['linePOST'] = _utils_string_at_index(response_values, 19)
#        self.vars['lineChoices'] = _utils_string_at_index(response_values, 20)
#        self.vars['lineChoicesAbbrev'] = _utils_string_at_index(response_values, 21)
#        self.vars['typingData'] = _utils_string_at_index(response_values, 22)
#        self.vars['divert'] = _utils_string_at_index(response_values, 23)
        response_thought = ChatterBotThought()
        response_thought.text = _utils_string_at_index(response_values, 0)
        return response_thought

#################################################
# Pandorabots impl
#################################################

class _Pandorabots(ChatterBot):

    def __init__(self, botid):
        self.botid = botid

    def create_session(self):
        return _PandorabotsSession(self)

class _PandorabotsSession(ChatterBotSession):

    def __init__(self, bot):
        self.vars = {}
        self.vars['botid'] = bot.botid
        self.vars['custid'] = uuid.uuid1()

    def think_thought(self, thought):
        self.vars['input'] = thought.text
        data = urlencode(self.vars)
        url_response = urlopen('https://www.pandorabots.com/pandora/talk-xml', data)
        response = url_response.read()
        response_dom = xml.dom.minidom.parseString(response)
        response_thought = ChatterBotThought()
        that_elements = response_dom.getElementsByTagName('that')
        if that_elements is None or len(that_elements) == 0 or that_elements[0] is None:
            return ''
        that_elements_child_nodes = that_elements[0].childNodes
        if that_elements_child_nodes is None or len(that_elements_child_nodes) == 0 or that_elements_child_nodes[0] is None:
            return ''
        that_elements_child_nodes_data = that_elements_child_nodes[0].data
        if that_elements_child_nodes_data is None:
            return ''
        response_thought.text = that_elements_child_nodes_data.strip()
        return response_thought

#################################################
# Utils
#################################################

def _utils_string_at_index(strings, index):
    if len(strings) > index:
        return strings[index]
    else:
        return ''

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_inputString(self, p):
        #self.outputString(p) #activate the output of the box
        factory = ChatterBotFactory()

        bot1 = factory.create(ChatterBotType.PANDORABOTS, 'b0dafd24ee35a477')
        bot1session = bot1.create_session()
        s = bot1session.think(p);

        self.outputString(str(s));
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="inputString" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" /><Output name="outputString" type="3" type_size="1" nature="2" inner="0" tooltip="" id="3" /></Box><Box name="Wait" id="33" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="2120" y="924"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Head Tap End" id="35" localization="8" tooltip="Enter description here" x="1817" y="508"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="Tactile Head_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" /><Output name="Say1_onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Tactile Head" id="9" localization="8" tooltip="Detect touch on head tactile sensor." x="439" y="458"><bitmap>media/images/box/sensors/tactileHead.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" /><Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" /><Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Head-sequence" type="Lock" timeout="0" /></Box><Box name="Sayend" id="11" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="788" y="472"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " It was nice talking to you! I hope we speak again soon! ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Hallo]]></german><greek><![CDATA[]]></greek><english><![CDATA[It was nice talking to you! I hope we speak again soon!]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>20</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="9" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Speech Reco." id="36" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="1839" y="636"><bitmap>media/images/box/interaction/ear.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")
        self.dialog = ALProxy("ALDialog")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")


    def onUnload(self):
        from threading import Lock
        self.dialog.stopDialog()
        self.dialog.closeSession()
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.removeAllContext()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        self.dialog.closeSession()
        self.dialog.stopDialog()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" /><Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" /><Parameter name="Word list" inherits_from_parent="0" content_type="3" value="a" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" /><Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="0" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" /><Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" /><Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" /><Resource name="Speech recognition" type="Lock" timeout="0" /></Box><Box name="Rec. Sound File" id="37" localization="8" tooltip="Record a sound on the robot. You can choose to record only with one&#x0A;microphone (the front head microphone) in ogg format, or with four microphones&#x0A;(front, sides and rear head&#x0A;microphones) in wav format." x="2060" y="614"><bitmap>media/images/box/interaction/rec_sound.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.ad = ALProxy("ALAudioDevice")
        except Exception as e:
            self.ad = None
            self.logger.error(e)
        self.filepath = ""

    def onLoad(self):
        self.bIsRecording = False
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False
        if( self.bIsRecording ):
            self.ad.stopMicrophonesRecording()
            self.bIsRecording = False

    def onInput_onStart(self, p):
        if(self.bIsRunning):
            return
        self.bIsRunning = True
        sExtension = self.toExtension( self.getParameter("Microphones used") )
        self.filepath = p + sExtension
        if self.ad:
            self.ad.startMicrophonesRecording( self.filepath )
            self.bIsRecording = True
        else:
            self.logger.warning("No sound recorded")

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped(self.filepath)

    def toExtension(self, sMicrophones):
        if( sMicrophones == "Front head microphone only (.ogg)" ):
            return ".ogg"
        else:
            return ".wav"]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Launches the recording of the sound. The data received on this input must be the&#x0A;filename of the sound." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the recording of the sound." id="3" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Returns the absolute path of the output sound file at the end of the recording" id="4" /><Parameter name="Microphones used" inherits_from_parent="1" content_type="3" value="Front head microphone only (.ogg)" default_value="Front, sides and rear head microphones (.wav)" custom_choice="0" tooltip="Microphones used to record the sound.&#x0A;&#x0A;Note: If you use only the front head microphone the file will be saved in ogg format. If you use the&#x0A;front, sides and rear head microphones it will be saved in wav format." id="5"><Choice value="Front head microphone only (.ogg)" /><Choice value="Front, sides and rear head microphones (.wav)" /></Parameter></Box><Box name="Get File Name" id="38" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="1898" y="776"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[import os
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        if( self.getParameter("Temporary storage") ):
            import tempfile
            path = tempfile.mkdtemp() + "/"
        else:
            path = os.path.expanduser('~') + "/recordings/microphones/"
        self.onStopped( path + self.getParameter("File name") )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="3" value="recording" default_value="" custom_choice="0" tooltip="Name of the file." id="4" /><Parameter name="Temporary storage" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Choose if the file should be stored as a temporary file so it is removed as soon&#x0A;as the behavior is unloaded.&#x0A;&#x0A;When this option is enabled the file is stored in ~/.cache/currentChoregrapheBehavior&#x0A;or in ~/.cache/&lt;project_name&gt; when you play the behavior from the&#x0A;behavior manager.&#x0A;&#x0A;When it is disabled the file is stored in ~/recordedSounds. You can&#x0A;then get it on your computer using the menu Connection/File transfer." id="5" /></Box><Box name="GetWords" id="39" localization="8" tooltip="" x="2258" y="681"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import socket
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.executing = True


    def onLoad(self):
        #put initialization code here

        pass

    def onUnload(self):

        self.executing = False
        self.outputError("Sorry, I spaced out. Can you say that again?")
        pass

    def onInput_wavPath(self, p):
        import speech_recognition as sr
        self.executing = True
        WAV_FILE = p #get wav file path

        r = sr.Recognizer()
        with sr.WavFile(WAV_FILE) as source:
            audio = r.record(source) # read the entire WAV

        try:
            print "---------------- Detecting -------------------"
            response = r.recognize_google(audio)
            print "--------------------------------------------------Google Speech Recognition thinks you said " + response
            if self.executing:
                self.outputString(str(response))
        except sr.UnknownValueError:
            print " ----------------------------------------------------------Google Speech Recognition could not understand audio"
            self.outputError("Can you repeat that? I couldn't understand you.")
        except sr.RequestError as e:
            #print "Could not request results from Google Speech Recognition service; {0}".format(e)
            self.outputError("I can't reach google! The internet must be broken!")
        except sr.URLError as e:
            self.outputError("Something went wrong. Idk what it is but though.")
        except socket.timeout:
            self.outputError("One of my sockets timed out!")
            print "Timed out!"
        pass

    def onInput_stop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="wavPath" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" /><Input name="stop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="outputString" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="outputError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Link inputowner="17" indexofinput="2" outputowner="15" indexofoutput="4" /><Link inputowner="18" indexofinput="2" outputowner="25" indexofoutput="5" /><Link inputowner="40" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="7" indexofinput="2" outputowner="22" indexofoutput="6" /><Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="6" /><Link inputowner="5" indexofinput="2" outputowner="22" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="8" /><Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="3" /><Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="5" /><Link inputowner="19" indexofinput="2" outputowner="11" indexofoutput="5" /><Link inputowner="15" indexofinput="2" outputowner="11" indexofoutput="6" /><Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="9" /><Link inputowner="0" indexofinput="5" outputowner="13" indexofoutput="4" /><Link inputowner="34" indexofinput="4" outputowner="7" indexofoutput="10" /><Link inputowner="34" indexofinput="4" outputowner="34" indexofoutput="6" /><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="22" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="25" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="15" indexofoutput="3" /><Link inputowner="11" indexofinput="2" outputowner="7" indexofoutput="11" /><Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="25" indexofinput="2" outputowner="7" indexofoutput="7" /><Link inputowner="14" indexofinput="2" outputowner="11" indexofoutput="7" /><Link inputowner="8" indexofinput="2" outputowner="14" indexofoutput="5" /><Link inputowner="22" indexofinput="2" outputowner="13" indexofoutput="5" /><Link inputowner="36" indexofinput="2" outputowner="16" indexofoutput="4" /><Link inputowner="38" indexofinput="2" outputowner="16" indexofoutput="4" /><Link inputowner="36" indexofinput="2" outputowner="31" indexofoutput="4" /><Link inputowner="36" indexofinput="3" outputowner="36" indexofoutput="6" /><Link inputowner="35" indexofinput="2" outputowner="16" indexofoutput="4" /><Link inputowner="38" indexofinput="2" outputowner="31" indexofoutput="4" /><Link inputowner="31" indexofinput="2" outputowner="32" indexofoutput="3" /><Link inputowner="33" indexofinput="2" outputowner="37" indexofoutput="4" /><Link inputowner="37" indexofinput="2" outputowner="38" indexofoutput="3" /><Link inputowner="37" indexofinput="3" outputowner="36" indexofoutput="5" /><Link inputowner="37" indexofinput="3" outputowner="36" indexofoutput="6" /><Link inputowner="39" indexofinput="2" outputowner="37" indexofoutput="4" /><Link inputowner="31" indexofinput="2" outputowner="39" indexofoutput="5" /><Link inputowner="32" indexofinput="2" outputowner="39" indexofoutput="4" /><Link inputowner="39" indexofinput="3" outputowner="33" indexofoutput="4" /><Link inputowner="33" indexofinput="3" outputowner="39" indexofoutput="5" /><Link inputowner="33" indexofinput="3" outputowner="39" indexofoutput="4" /><Link inputowner="36" indexofinput="3" outputowner="36" indexofoutput="5" /><Link inputowner="16" indexofinput="2" outputowner="34" indexofoutput="5" /><Link inputowner="22" indexofinput="2" outputowner="35" indexofoutput="3" /><Link inputowner="22" indexofinput="2" outputowner="12" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>